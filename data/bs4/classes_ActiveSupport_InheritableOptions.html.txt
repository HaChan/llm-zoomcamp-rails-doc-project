Inheritable OptionsInheritableOptionsprovides a constructor to build anOrderedOptionshash inherited from another hash.Use this if you already have some hash and you want to create a new one based on it.h = ActiveSupport::InheritableOptions.new({ girl: 'Mary', boy: 'John' })
h.girl # => 'Mary'
h.boy  # => 'John'If the existing hash has string keys, callHash#symbolize_keyson it.h = ActiveSupport::InheritableOptions.new({ 'girl' => 'Mary', 'boy' => 'John' }.symbolize_keys)
h.girl # => 'Mary'
h.boy  # => 'John'Methods#==EeachIinheritable_copy,inspectKkey?NnewOoverridden?,own_key?Ppretty_printTto_a,to_h,to_sClass Public methodsnew(parent = nil)LinkSource:show|on GitHub# File activesupport/lib/active_support/ordered_options.rb, line 90definitialize(parent=nil)@parent=parentif@parent.kind_of?(OrderedOptions)# use the faster _get when dealing with OrderedOptionssuper() {|h,k|@parent._get(k) }elsif@parentsuper() {|h,k|@parent[k] }elsesuper()@parent= {}endendInstance Public methods==(other)LinkSource:show|on GitHub# File activesupport/lib/active_support/ordered_options.rb, line 107def==(other)to_h==other.to_hendeach(&block)LinkSource:show|on GitHub# File activesupport/lib/active_support/ordered_options.rb, line 142defeach(&block)to_h.each(&block)selfendinheritable_copy()LinkSource:show|on GitHub# File activesupport/lib/active_support/ordered_options.rb, line 134definheritable_copyself.class.new(self)endinspect()LinkSource:show|on GitHub# File activesupport/lib/active_support/ordered_options.rb, line 111definspect"#<#{self.class.name} #{to_h.inspect}>"endkey?(key)LinkAlso aliased as:own_key?Source:show|on GitHub# File activesupport/lib/active_support/ordered_options.rb, line 126defkey?(key)super||@parent.key?(key)endoverridden?(key)LinkSource:show|on GitHub# File activesupport/lib/active_support/ordered_options.rb, line 130defoverridden?(key)!!(@parent&&@parent.key?(key)&&own_key?(key.to_sym))endown_key?(key)LinkAlias for:key?pretty_print(pp)LinkSource:show|on GitHub# File activesupport/lib/active_support/ordered_options.rb, line 119defpretty_print(pp)pp.pp_hash(to_h)endto_a()LinkSource:show|on GitHub# File activesupport/lib/active_support/ordered_options.rb, line 138defto_aentriesendto_h()LinkSource:show|on GitHub# File activesupport/lib/active_support/ordered_options.rb, line 103defto_h@parent.merge(self)endto_s()LinkSource:show|on GitHub# File activesupport/lib/active_support/ordered_options.rb, line 115defto_sto_h.to_send