AnActiveModel::Type::Valuethat encrypts/decrypts strings of text.This is the central piece that connects the encryption system withencryptsdeclarations in the model classes. Whenever you declare an attribute as encrypted, it configures anEncryptedAttributeTypefor that attribute.MethodsCcast,changed_in_place?DdeserializeEencrypted?NnewSserialize,support_unencrypted_data?Included ModulesActiveModel::Type::Helpers::MutableAttributes[R]cast_type[R]schemeClass Public methodsnew(scheme:, cast_type: ActiveModel::Type::String.new, previous_type: false, default: nil)LinkOptions:scheme- ASchemewith the encryption properties for this attribute.:cast_type- A type that will be used to serialize (before encrypting) and deserialize (after decrypting).ActiveModel::Type::Stringby default.Source:show|on GitHub# File activerecord/lib/active_record/encryption/encrypted_attribute_type.rb, line 23definitialize(scheme:,cast_type:ActiveModel::Type::String.new,previous_type:false,default:nil)super()@scheme=scheme@cast_type=cast_type@previous_type=previous_type@default=defaultendInstance Public methodscast(value)LinkSource:show|on GitHub# File activerecord/lib/active_record/encryption/encrypted_attribute_type.rb, line 31defcast(value)cast_type.cast(value)endchanged_in_place?(raw_old_value, new_value)LinkSource:show|on GitHub# File activerecord/lib/active_record/encryption/encrypted_attribute_type.rb, line 51defchanged_in_place?(raw_old_value,new_value)old_value=raw_old_value.nil??nil:deserialize(raw_old_value)old_value!=new_valueenddeserialize(value)LinkSource:show|on GitHub# File activerecord/lib/active_record/encryption/encrypted_attribute_type.rb, line 35defdeserialize(value)cast_type.deserializedecrypt(value)endencrypted?(value)LinkSource:show|on GitHub# File activerecord/lib/active_record/encryption/encrypted_attribute_type.rb, line 47defencrypted?(value)with_context{encryptor.encrypted?value}endserialize(value)LinkSource:show|on GitHub# File activerecord/lib/active_record/encryption/encrypted_attribute_type.rb, line 39defserialize(value)ifserialize_with_oldest?serialize_with_oldest(value)elseserialize_with_current(value)endendsupport_unencrypted_data?()LinkSource:show|on GitHub# File activerecord/lib/active_record/encryption/encrypted_attribute_type.rb, line 61defsupport_unencrypted_data?ActiveRecord::Encryption.config.support_unencrypted_data&&scheme.support_unencrypted_data?&&!previous_type?end