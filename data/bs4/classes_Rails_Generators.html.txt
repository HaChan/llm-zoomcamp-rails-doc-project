NamespaceMODULERails::Generators::ActionsMODULERails::Generators::DbMODULERails::Generators::MigrationMODULERails::Generators::TestingCLASSRails::Generators::ActiveModelCLASSRails::Generators::AppBaseCLASSRails::Generators::AppGeneratorCLASSRails::Generators::BaseCLASSRails::Generators::BenchmarkGeneratorCLASSRails::Generators::DatabaseCLASSRails::Generators::NamedBaseCLASSRails::Generators::TestCaseMethodsAapi_only!Ccommand_typeFfallbacks,file_lookup_pathsHhelp,hidden_namespaces,hide_namespace,hide_namespacesIinvokeLlookup_pathsPprint_generators,print_list,public_namespacesSsorted_groupsConstantsDEFAULT_ALIASES={
rails: {
actions: "-a",
orm: "-o",
javascripts: ["-j", "--js"],
resource_controller: "-c",
scaffold_controller: "-c",
stylesheets: "-y",
template_engine: "-e",
test_framework: "-t"
},

test_unit: {
fixture_replacement: "-r",
}
}DEFAULT_OPTIONS={
rails: {
api: false,
assets: true,
force_plural: false,
helper: true,
integration_tool: nil,
orm: false,
resource_controller: :controller,
resource_route: true,
scaffold_controller: :scaffold_controller,
system_tests: nil,
test_framework: nil,
template_engine: :erb
}
}RAILS_DEV_PATH=File.expand_path("../../../../../..", __dir__)We need to store theRAILS_DEV_PATHin a constant, otherwise the path can change in Ruby 1.8.7 when we FileUtils.cd.Class Public methodsapi_only!()LinkConfigure generators forAPIonly applications. It basically hides everything that is usually browser related, such as assets and session migration generators, and completely disable helpers and assets so generators such as scaffold wonât create them.Source:show|on GitHub# File railties/lib/rails/generators.rb, line 113defapi_only!hide_namespaces"assets","helper","css","js"options[:rails].merge!(api:true,assets:false,helper:false,template_engine:nil)options[:mailer]||={}options[:mailer][:template_engine]||=:erbendfallbacks()LinkHold configured generators fallbacks. If a plugin developer wants a generator group to fall back to another group in case of missing generators, they can add a fallback.For example, shoulda is considered a test_framework and is an extension of test_unit. However, most part of shoulda generators are similar to test_unit ones.Shoulda then can tell generators to search for test_unit generators when some of them are not available by adding a fallback:Rails::Generators.fallbacks[:shoulda] = :test_unitSource:show|on GitHub# File railties/lib/rails/generators.rb, line 105deffallbacks@fallbacks||={}endhelp(command = "generate")LinkShow help message with available generators.Source:show|on GitHub# File railties/lib/rails/generators.rb, line 166defhelp(command="generate")puts"Usage:"puts"  bin/rails #{command} GENERATOR [args] [options]"putsputs"General options:"puts"  -h, [--help]     # Print generator's options and usage"puts"  -p, [--pretend]  # Run but do not make any changes"puts"  -f, [--force]    # Overwrite files that already exist"puts"  -s, [--skip]     # Skip files that already exist"puts"  -q, [--quiet]    # Suppress status output"putsputs"Please choose a generator below."putsprint_generatorsendhidden_namespaces()LinkReturns an array of generator namespaces that are hidden. Generator namespaces may be hidden for a variety of reasons. Some are aliased such as ârails:migrationâ and can be invoked with the shorter âmigrationâ.Source:show|on GitHub# File railties/lib/rails/generators.rb, line 131defhidden_namespaces@hidden_namespaces||=beginorm=options[:rails][:orm]test=options[:rails][:test_framework]template=options[:rails][:template_engine]

    ["rails","resource_route","#{orm}:migration","#{orm}:model","#{test}:controller","#{test}:helper","#{test}:integration","#{test}:system","#{test}:mailer","#{test}:model","#{test}:scaffold","#{test}:view","#{test}:job","#{template}:controller","#{template}:scaffold","#{template}:mailer","action_text:install","action_mailbox:install"]endendhide_namespace(*namespaces)LinkAlias for:hide_namespaceshide_namespaces(*namespaces)LinkAlso aliased as:hide_namespaceSource:show|on GitHub# File railties/lib/rails/generators.rb, line 160defhide_namespaces(*namespaces)hidden_namespaces.concat(namespaces)endinvoke(namespace, args = ARGV, config = {})LinkReceives a namespace, arguments, and the behavior to invoke the generator. Itâs used as the default entry point for generate, destroy, and update commands.Source:show|on GitHub# File railties/lib/rails/generators.rb, line 257definvoke(namespace,args=ARGV,config= {})names=namespace.to_s.split(":")ifklass=find_by_namespace(names.pop,names.any?&&names.join(":"))args<<"--help"ifargs.empty?&&klass.arguments.any?(&:required?)klass.start(args,config)run_after_generate_callbackifconfig[:behavior]==:invokeelseoptions=sorted_groups.flat_map(&:last)error=Command::CorrectableNameError.new("Could not find generator '#{namespace}'.",namespace,options)puts<<~MSG#{error.detailed_message}
            Run `bin/rails generate --help` for more options.MSGendendprint_generators()LinkSource:show|on GitHub# File railties/lib/rails/generators.rb, line 188defprint_generatorssorted_groups.each{|b,n|print_list(b,n) }endpublic_namespaces()LinkSource:show|on GitHub# File railties/lib/rails/generators.rb, line 183defpublic_namespaceslookup!subclasses.map(&:namespace)endsorted_groups()LinkSource:show|on GitHub# File railties/lib/rails/generators.rb, line 192defsorted_groupsnamespaces=public_namespacesnamespaces.sort!groups=Hash.new{|h,k|h[k] = [] }namespaces.eachdo|namespace|base=namespace.split(":").firstgroups[base]<<namespaceendrails=groups.delete("rails")rails.map!{|n|n.delete_prefix("rails:") }rails.delete("app")rails.delete("plugin")rails.delete("encrypted_file")rails.delete("encryption_key_file")rails.delete("master_key")rails.delete("credentials")rails.delete("db:system:change")hidden_namespaces.each{|n|groups.delete(n.to_s) }

  [["rails",rails]]+groups.sort.to_aendClass Private methodscommand_type()LinkSource:show|on GitHub# File railties/lib/rails/generators.rb, line 301defcommand_type# :doc:@command_type||="generator"endfile_lookup_paths()LinkSource:show|on GitHub# File railties/lib/rails/generators.rb, line 309deffile_lookup_paths# :doc:@file_lookup_paths||=["{#{lookup_paths.join(',')}}","**","*_generator.rb"]endlookup_paths()LinkSource:show|on GitHub# File railties/lib/rails/generators.rb, line 305deflookup_paths# :doc:@lookup_paths||=%w( rails/generators generators )endprint_list(base, namespaces)LinkSource:show|on GitHub# File railties/lib/rails/generators.rb, line 280defprint_list(base,namespaces)# :doc:namespaces=namespaces.reject{|n|hidden_namespaces.include?(n) }superend