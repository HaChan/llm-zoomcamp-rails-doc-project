Active Record Connection AdaptersSchemaCacheMethodsAaddCcached?,clear_data_source_cache!,columns,columns_hash,columns_hash?Ddata_source_exists?,dump_toIindexesPprimary_keysSschema_version,sizeVversionInstance Public methodsadd(pool, table_name)LinkAdd internal cache for table withtable_name.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/schema_cache.rb, line 326defadd(pool,table_name)pool.with_connectiondoifdata_source_exists?(pool,table_name)primary_keys(pool,table_name)columns(pool,table_name)columns_hash(pool,table_name)indexes(pool,table_name)endendendcached?(table_name)LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/schema_cache.rb, line 294defcached?(table_name)@columns.key?(table_name)endclear_data_source_cache!(_connection, name)LinkClear out internal caches for the data sourcename.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/schema_cache.rb, line 388defclear_data_source_cache!(_connection,name)@columns.deletename@columns_hash.deletename@primary_keys.deletename@data_sources.deletename@indexes.deletenameendcolumns(pool, table_name)LinkGet the columns for a tableSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/schema_cache.rb, line 338defcolumns(pool,table_name)ifignored_table?(table_name)raiseActiveRecord::StatementInvalid.new("Table '#{table_name}' doesn't exist",connection_pool:pool)end@columns.fetch(table_name)dopool.with_connectiondo|connection|@columns[deep_deduplicate(table_name)] =deep_deduplicate(connection.columns(table_name))endendendcolumns_hash(pool, table_name)LinkGet the columns for a table as a hash, key is the column name value is the column object.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/schema_cache.rb, line 352defcolumns_hash(pool,table_name)@columns_hash.fetch(table_name)do@columns_hash[deep_deduplicate(table_name)] =columns(pool,table_name).index_by(&:name).freezeendendcolumns_hash?(_pool, table_name)LinkChecks whether the columns hash is already cached for a table.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/schema_cache.rb, line 359defcolumns_hash?(_pool,table_name)@columns_hash.key?(table_name)enddata_source_exists?(pool, name)LinkA cached lookup for table existence.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/schema_cache.rb, line 309defdata_source_exists?(pool,name)returnifignored_table?(name)if@data_sources.empty?tables_to_cache(pool).eachdo|source|@data_sources[source] =trueendendreturn@data_sources[name]if@data_sources.key?name@data_sources[deep_deduplicate(name)] =pool.with_connectiondo|connection|connection.data_source_exists?(name)endenddump_to(filename)LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/schema_cache.rb, line 406defdump_to(filename)open(filename) {|f|iffilename.include?(".dump")f.write(Marshal.dump(self))elsef.write(YAML.dump(self))end}endindexes(pool, table_name)LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/schema_cache.rb, line 363defindexes(pool,table_name)@indexes.fetch(table_name)dopool.with_connectiondo|connection|ifdata_source_exists?(pool,table_name)@indexes[deep_deduplicate(table_name)] =deep_deduplicate(connection.indexes(table_name))else[]endendendendprimary_keys(pool, table_name)LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/schema_cache.rb, line 298defprimary_keys(pool,table_name)@primary_keys.fetch(table_name)dopool.with_connectiondo|connection|ifdata_source_exists?(pool,table_name)@primary_keys[deep_deduplicate(table_name)] =deep_deduplicate(connection.primary_key(table_name))endendendendschema_version()LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/schema_cache.rb, line 379defschema_version@versionendsize()LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/schema_cache.rb, line 383defsize[@columns,@columns_hash,@primary_keys,@data_sources].sum(&:size)endversion(pool)LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/schema_cache.rb, line 375defversion(pool)@version||=pool.with_connection(&:schema_version)end