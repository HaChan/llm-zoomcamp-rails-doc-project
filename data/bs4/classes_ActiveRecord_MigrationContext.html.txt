Migration ContextMigrationContextsets the context in which a migration is run.A migration context requires the path to the migrations is set in themigrations_pathsparameter. Optionally aschema_migrationclass can be provided. Multiple database applications will instantiate aSchemaMigrationobject per database. From the Rake tasks, Rails will handle this for you.MethodsMmigrateNnewAttributes[R]internal_metadata[R]migrations_paths[R]schema_migrationClass Public methodsnew(migrations_paths, schema_migration = nil, internal_metadata = nil)LinkSource:show|on GitHub# File activerecord/lib/active_record/migration.rb, line 1217definitialize(migrations_paths,schema_migration=nil,internal_metadata=nil)@migrations_paths=migrations_paths@schema_migration=schema_migration||SchemaMigration.new(connection_pool)@internal_metadata=internal_metadata||InternalMetadata.new(connection_pool)endInstance Public methodsmigrate(target_version = nil, &block)LinkRuns the migrations in themigrations_path.Iftarget_versionisnil,migratewill runup.If thecurrent_versionandtarget_versionare both 0 then an empty array will be returned and no migrations will be run.If thecurrent_versionin the schema is greater than thetarget_version, thendownwill be run.If none of the conditions are met,upwill be run with thetarget_version.Source:show|on GitHub# File activerecord/lib/active_record/migration.rb, line 1236defmigrate(target_version=nil,&block)casewhentarget_version.nil?up(target_version,&block)whencurrent_version==0&&target_version==0[]whencurrent_version>target_versiondown(target_version,&block)elseup(target_version,&block)endend