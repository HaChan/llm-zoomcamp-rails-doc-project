Action ControllerLiveServer Sent EventsThis class provides the ability to write anSSE(Server Sent Event) to anIOstream. The class is initialized with a stream and can be used to either write a JSON string or an object which can be converted to JSON.Writing an object will convert it into standardSSEformat with whatever options you have configured. You may choose to set the following options:1) Event. If specified, an event with this name will be dispatched on
the browser.
2) Retry. The reconnection time in milliseconds used when attempting
to send the event.
3) Id. If the connection dies while sending an SSE to the browser, then
the server will receive a +Last-Event-ID+ header with value equal to +id+.After setting an option in the constructor of theSSEobject, all future SSEs sent across the stream will use those options unless overridden.Example Usage:class MyController < ActionController::Base
  include ActionController::Live

  def index
    response.headers['Content-Type'] = 'text/event-stream'
    sse = SSE.new(response.stream, retry: 300, event: "event-name")
    sse.write({ name: 'John'})
    sse.write({ name: 'John'}, id: 10)
    sse.write({ name: 'John'}, id: 10, event: "other-event")
    sse.write({ name: 'John'}, id: 10, event: "other-event", retry: 500)
  ensure
    sse.close
  end
endNote: SSEs are not currently supported by IE. However, they are supported by Chrome, Firefox, Opera, and Safari.MethodsCcloseNnewWwriteConstantsPERMITTED_OPTIONS=%w( retry event id )Class Public methodsnew(stream, options = {})LinkSource:show|on GitHub# File actionpack/lib/action_controller/metal/live.rb, line 112definitialize(stream,options= {})@stream=stream@options=optionsendInstance Public methodsclose()LinkSource:show|on GitHub# File actionpack/lib/action_controller/metal/live.rb, line 117defclose@stream.closeendwrite(object, options = {})LinkSource:show|on GitHub# File actionpack/lib/action_controller/metal/live.rb, line 121defwrite(object,options= {})caseobjectwhenStringperform_write(object,options)elseperform_write(ActiveSupport::JSON.encode(object),options)endend