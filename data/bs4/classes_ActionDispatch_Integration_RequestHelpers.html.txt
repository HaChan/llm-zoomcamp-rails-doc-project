MethodsDdeleteFfollow_redirect!GgetHheadOoptionsPpatch,post,putInstance Public methodsdelete(path, **args)LinkPerforms a DELETE request with the given parameters. SeeActionDispatch::Integration::Session#processfor more details.Source:show|on GitHub# File actionpack/lib/action_dispatch/testing/integration.rb, line 42defdelete(path,**args)process(:delete,path,**args)endfollow_redirect!(headers: {}, **args)LinkFollow a single redirect response. If the last response was not a redirect, an exception will be raised. Otherwise, the redirect is performed on the location header. If the redirection is a 307 or 308 redirect, the same HTTP verb will be used when redirecting, otherwise a GET request will be performed. Any arguments are passed to the underlying request.The HTTP_REFERER header will be set to the previous url.Source:show|on GitHub# File actionpack/lib/action_dispatch/testing/integration.rb, line 65deffollow_redirect!(headers:{},**args)raise"not a redirect! #{status} #{status_message}"unlessredirect?method=if[307,308].include?(response.status)request.method.downcaseelse:getendif[:HTTP_REFERER,"HTTP_REFERER"].none?{|key|headers.key?key}headers["HTTP_REFERER"] =request.urlendpublic_send(method,response.location,headers:headers,**args)statusendget(path, **args)LinkPerforms a GET request with the given parameters. SeeActionDispatch::Integration::Session#processfor more details.Source:show|on GitHub# File actionpack/lib/action_dispatch/testing/integration.rb, line 18defget(path,**args)process(:get,path,**args)endhead(path, **args)LinkPerforms a HEAD request with the given parameters. SeeActionDispatch::Integration::Session#processfor more details.Source:show|on GitHub# File actionpack/lib/action_dispatch/testing/integration.rb, line 48defhead(path,**args)process(:head,path,**args)endoptions(path, **args)LinkPerforms an OPTIONS request with the given parameters. SeeActionDispatch::Integration::Session#processfor more details.Source:show|on GitHub# File actionpack/lib/action_dispatch/testing/integration.rb, line 54defoptions(path,**args)process(:options,path,**args)endpatch(path, **args)LinkPerforms a PATCH request with the given parameters. SeeActionDispatch::Integration::Session#processfor more details.Source:show|on GitHub# File actionpack/lib/action_dispatch/testing/integration.rb, line 30defpatch(path,**args)process(:patch,path,**args)endpost(path, **args)LinkPerforms a POST request with the given parameters. SeeActionDispatch::Integration::Session#processfor more details.Source:show|on GitHub# File actionpack/lib/action_dispatch/testing/integration.rb, line 24defpost(path,**args)process(:post,path,**args)endput(path, **args)LinkPerforms a PUT request with the given parameters. SeeActionDispatch::Integration::Session#processfor more details.Source:show|on GitHub# File actionpack/lib/action_dispatch/testing/integration.rb, line 36defput(path,**args)process(:put,path,**args)end