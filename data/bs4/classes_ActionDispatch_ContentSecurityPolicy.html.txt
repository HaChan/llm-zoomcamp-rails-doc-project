Action Dispatch Content Security PolicyConfigures the HTTP [Content-Security-Policy] (developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy) response header to help protect against XSS and injection attacks.Example global policy:Rails.application.config.content_security_policy do |policy|
  policy.default_src :self, :https
  policy.font_src    :self, :https, :data
  policy.img_src     :self, :https, :data
  policy.object_src  :none
  policy.script_src  :self, :https
  policy.style_src   :self, :https

  # Specify URI for violation reports
  policy.report_uri "/csp-violation-report-endpoint"
endNamespaceMODULEActionDispatch::ContentSecurityPolicy::RequestCLASSActionDispatch::ContentSecurityPolicy::MiddlewareMethodsBblock_all_mixed_content,buildIinitialize_copyNnewPplugin_typesRreport_uri,require_sri_forSsandboxUupgrade_insecure_requestsAttributes[R]directivesClass Public methodsnew()LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/http/content_security_policy.rb, line 177definitialize@directives= {}yieldselfifblock_given?endInstance Public methodsblock_all_mixed_content(enabled = true)LinkSpecify whether to prevent the user agent from loading any assets over HTTP when the page uses HTTPS:policy.block_all_mixed_contentPassfalseto allow it again:policy.block_all_mixed_content falseSource:show|on GitHub# File actionpack/lib/action_dispatch/http/content_security_policy.rb, line 205defblock_all_mixed_content(enabled=true)ifenabled@directives["block-all-mixed-content"] =trueelse@directives.delete("block-all-mixed-content")endendbuild(context = nil, nonce = nil, nonce_directives = nil)LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/http/content_security_policy.rb, line 297defbuild(context=nil,nonce=nil,nonce_directives=nil)nonce_directives=DEFAULT_NONCE_DIRECTIVESifnonce_directives.nil?build_directives(context,nonce,nonce_directives).compact.join("; ")endinitialize_copy(other)LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/http/content_security_policy.rb, line 182definitialize_copy(other)@directives=other.directives.deep_dupendplugin_types(*types)LinkRestricts the set of plugins that can be embedded:policy.plugin_types "application/x-shockwave-flash"Leave empty to allow all plugins:policy.plugin_typesSource:show|on GitHub# File actionpack/lib/action_dispatch/http/content_security_policy.rb, line 221defplugin_types(*types)iftypes.first@directives["plugin-types"] =typeselse@directives.delete("plugin-types")endendreport_uri(uri)LinkEnable the [report-uri] (developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/report-uri) directive. Violation reports will be sent to the specified URI:policy.report_uri "/csp-violation-report-endpoint"Source:show|on GitHub# File actionpack/lib/action_dispatch/http/content_security_policy.rb, line 236defreport_uri(uri)@directives["report-uri"] = [uri]endrequire_sri_for(*types)LinkSpecify asset types for which [Subresource Integrity] (developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity) is required:policy.require_sri_for :script, :styleLeave empty to not require Subresource Integrity:policy.require_sri_forSource:show|on GitHub# File actionpack/lib/action_dispatch/http/content_security_policy.rb, line 249defrequire_sri_for(*types)iftypes.first@directives["require-sri-for"] =typeselse@directives.delete("require-sri-for")endendsandbox(*values)LinkSpecify whether a [sandbox] (developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/sandbox) should be enabled for the requested resource:policy.sandboxValues can be passed as arguments:policy.sandbox "allow-scripts", "allow-modals"Passfalseto disable the sandbox:policy.sandbox falseSource:show|on GitHub# File actionpack/lib/action_dispatch/http/content_security_policy.rb, line 271defsandbox(*values)ifvalues.empty?@directives["sandbox"] =trueelsifvalues.first@directives["sandbox"] =valueselse@directives.delete("sandbox")endendupgrade_insecure_requests(enabled = true)LinkSpecify whether user agents should treat any assets over HTTP as HTTPS:policy.upgrade_insecure_requestsPassfalseto disable it:policy.upgrade_insecure_requests falseSource:show|on GitHub# File actionpack/lib/action_dispatch/http/content_security_policy.rb, line 289defupgrade_insecure_requests(enabled=true)ifenabled@directives["upgrade-insecure-requests"] =trueelse@directives.delete("upgrade-insecure-requests")endend