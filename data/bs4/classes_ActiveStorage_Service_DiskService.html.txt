Active Storage Disk ServiceWraps a local disk path as an Active Storage service. SeeActiveStorage::Servicefor the generic API documentation that applies to all services.MethodsCcomposeDdelete,delete_prefixed,download,download_chunkEexist?Hheaders_for_direct_uploadNnewUupload,url_for_direct_uploadAttributes[RW]rootClass Public methodsnew(root:, public: false, **options)LinkSource:show|on GitHub# File activestorage/lib/active_storage/service/disk_service.rb, line 16definitialize(root:,public:false,**options)@root=root@public=publicendInstance Public methodscompose(source_keys, destination_key, **)LinkSource:show|on GitHub# File activestorage/lib/active_storage/service/disk_service.rb, line 105defcompose(source_keys,destination_key,**)File.open(make_path_for(destination_key),"w")do|destination_file|source_keys.eachdo|source_key|File.open(path_for(source_key),"rb")do|source_file|IO.copy_stream(source_file,destination_file)endendendenddelete(key)LinkSource:show|on GitHub# File activestorage/lib/active_storage/service/disk_service.rb, line 53defdelete(key)instrument:delete,key:keydoFile.deletepath_for(key)rescueErrno::ENOENT# Ignore files already deletedendenddelete_prefixed(prefix)LinkSource:show|on GitHub# File activestorage/lib/active_storage/service/disk_service.rb, line 61defdelete_prefixed(prefix)instrument:delete_prefixed,prefix:prefixdoDir.glob(path_for("#{prefix}*")).eachdo|path|FileUtils.rm_rf(path)endendenddownload(key, &block)LinkSource:show|on GitHub# File activestorage/lib/active_storage/service/disk_service.rb, line 28defdownload(key,&block)ifblock_given?instrument:streaming_download,key:keydostreamkey,&blockendelseinstrument:download,key:keydoFile.binreadpath_for(key)rescueErrno::ENOENTraiseActiveStorage::FileNotFoundErrorendendenddownload_chunk(key, range)LinkSource:show|on GitHub# File activestorage/lib/active_storage/service/disk_service.rb, line 42defdownload_chunk(key,range)instrument:download_chunk,key:key,range:rangedoFile.open(path_for(key),"rb")do|file|file.seekrange.beginfile.readrange.sizeendrescueErrno::ENOENTraiseActiveStorage::FileNotFoundErrorendendexist?(key)LinkSource:show|on GitHub# File activestorage/lib/active_storage/service/disk_service.rb, line 69defexist?(key)instrument:exist,key:keydo|payload|answer=File.exist?path_for(key)payload[:exist] =answeranswerendendheaders_for_direct_upload(key, content_type:, **)LinkSource:show|on GitHub# File activestorage/lib/active_storage/service/disk_service.rb, line 97defheaders_for_direct_upload(key,content_type:,**)
  {"Content-Type"=>content_type}endupload(key, io, checksum: nil, **)LinkSource:show|on GitHub# File activestorage/lib/active_storage/service/disk_service.rb, line 21defupload(key,io,checksum:nil,**)instrument:upload,key:key,checksum:checksumdoIO.copy_stream(io,make_path_for(key))ensure_integrity_of(key,checksum)ifchecksumendendurl_for_direct_upload(key, expires_in:, content_type:, content_length:, checksum:, custom_metadata: {})LinkSource:show|on GitHub# File activestorage/lib/active_storage/service/disk_service.rb, line 77defurl_for_direct_upload(key,expires_in:,content_type:,content_length:,checksum:,custom_metadata:{})instrument:url,key:keydo|payload|verified_token_with_expiration=ActiveStorage.verifier.generate(
      {key:key,content_type:content_type,content_length:content_length,checksum:checksum,service_name:name},expires_in:expires_in,purpose::blob_token)url_helpers.update_rails_disk_service_url(verified_token_with_expiration,url_options).tapdo|generated_url|payload[:url] =generated_urlendendend