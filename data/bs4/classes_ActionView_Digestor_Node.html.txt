MethodsCcreateDdependency_digest,digestNnewTto_dep_mapAttributes[R]children[R]logical_name[R]name[R]templateClass Public methodscreate(name, logical_name, template, partial)LinkSource:show|on GitHub# File actionview/lib/action_view/digestor.rb, line 81defself.create(name,logical_name,template,partial)klass=partial?Partial:Nodeklass.new(name,logical_name,template, [])endnew(name, logical_name, template, children = [])LinkSource:show|on GitHub# File actionview/lib/action_view/digestor.rb, line 86definitialize(name,logical_name,template,children= [])@name=name@logical_name=logical_name@template=template@children=childrenendInstance Public methodsdependency_digest(finder, stack)LinkSource:show|on GitHub# File actionview/lib/action_view/digestor.rb, line 97defdependency_digest(finder,stack)children.mapdo|node|ifstack.include?(node)falseelsefinder.digest_cache[node.name]||=beginstack.pushnodenode.digest(finder,stack).tap{stack.pop}endendend.join("-")enddigest(finder, stack = [])LinkSource:show|on GitHub# File actionview/lib/action_view/digestor.rb, line 93defdigest(finder,stack= [])ActiveSupport::Digest.hexdigest("#{template.source}-#{dependency_digest(finder, stack)}")endto_dep_map()LinkSource:show|on GitHub# File actionview/lib/action_view/digestor.rb, line 110defto_dep_mapchildren.any??{name=>children.map(&:to_dep_map) }:nameend