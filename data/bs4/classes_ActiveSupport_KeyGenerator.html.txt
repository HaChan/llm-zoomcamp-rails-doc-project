Key GeneratorKeyGeneratoris a simple wrapper around OpenSSLâs implementation of PBKDF2. It can be used to derive a number of keys for various purposes from a given secret. This lets Rails applications have a single secure secret, but avoid reusing that key in multiple incompatible contexts.MethodsGgenerate_keyHhash_digest_class,hash_digest_class=NnewClass Public methodshash_digest_class()LinkSource:show|on GitHub# File activesupport/lib/active_support/key_generator.rb, line 23defhash_digest_class@hash_digest_class||=OpenSSL::Digest::SHA1endhash_digest_class=(klass)LinkSource:show|on GitHub# File activesupport/lib/active_support/key_generator.rb, line 15defhash_digest_class=(klass)ifklass.kind_of?(Class)&&klass<OpenSSL::Digest@hash_digest_class=klasselseraiseArgumentError,"#{klass} is expected to be an OpenSSL::Digest subclass"endendnew(secret, options = {})LinkSource:show|on GitHub# File activesupport/lib/active_support/key_generator.rb, line 28definitialize(secret,options= {})@secret=secret# The default iterations are higher than required for our key derivation uses# on the off chance someone uses this for password storage@iterations=options[:iterations]||2**16# Also allow configuration here so people can use this to build a rotation# scheme when switching the digest class.@hash_digest_class=options[:hash_digest_class]||self.class.hash_digest_classendInstance Public methodsgenerate_key(salt, key_size = 64)LinkReturns a derived key suitable for use.  The defaultkey_sizeis chosen to be compatible with the default settings ofActiveSupport::MessageVerifier. i.e.OpenSSL::Digest::SHA1#block_lengthSource:show|on GitHub# File activesupport/lib/active_support/key_generator.rb, line 41defgenerate_key(salt,key_size=64)OpenSSL::PKCS5.pbkdf2_hmac(@secret,salt,@iterations,key_size,@hash_digest_class.new)end