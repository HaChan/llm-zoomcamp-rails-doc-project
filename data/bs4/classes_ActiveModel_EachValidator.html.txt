Active Model EachValidatorEachValidatoris a validator which iterates through the attributes given in the options hash invoking thevalidate_eachmethod passing in the record, attribute, and value.All Active Model validations are built on top of this validator.MethodsCcheck_validity!NnewVvalidate,validate_eachAttributes[R]attributesClass Public methodsnew(options)LinkReturns a new validator instance. All options will be available via theoptionsreader, however the:attributesoption will be removed and instead be made available through theattributesreader.Source:show|on GitHub# File activemodel/lib/active_model/validator.rb, line 140definitialize(options)@attributes=Array(options.delete(:attributes))raiseArgumentError,":attributes cannot be blank"if@attributes.empty?supercheck_validity!endInstance Public methodscheck_validity!()LinkHook method that gets called by the initializer allowing verification that the arguments supplied are valid. You could for example raise anArgumentErrorwhen invalid options are supplied.Source:show|on GitHub# File activemodel/lib/active_model/validator.rb, line 168defcheck_validity!endvalidate(record)LinkPerforms validation on the supplied record. By default this will callvalidate_eachto determine validity therefore subclasses should overridevalidate_eachwith validation logic.Source:show|on GitHub# File activemodel/lib/active_model/validator.rb, line 150defvalidate(record)attributes.eachdo|attribute|value=record.read_attribute_for_validation(attribute)nextif(value.nil?&&options[:allow_nil])||(value.blank?&&options[:allow_blank])value=prepare_value_for_validation(value,record,attribute)validate_each(record,attribute,value)endendvalidate_each(record, attribute, value)LinkOverride this method in subclasses with the validation logic, adding errors to the recordserrorsarray where necessary.Source:show|on GitHub# File activemodel/lib/active_model/validator.rb, line 161defvalidate_each(record,attribute,value)raiseNotImplementedError,"Subclasses must implement a validate_each(record, attribute, value) method"end