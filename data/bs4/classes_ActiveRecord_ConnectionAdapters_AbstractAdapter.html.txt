Active Record Abstract AdapterActive Record supports multiple database systems.AbstractAdapterand related classes form the abstraction layer which makes this possible. AnAbstractAdapterrepresents a connection to a database, and provides an abstract interface for database-specific functionality such as establishing a connection, escaping values, building the right SQL fragments for:offsetand:limitoptions, etc.All the concrete database adapters follow the interface laid down in this class.ActiveRecord::Base.lease_connectionreturns anAbstractAdapterobject, which you can use.Most of the methods in the adapter are useful during migrations. Most notably, the instance methods provided bySchemaStatementsare very useful.NamespaceCLASSActiveRecord::ConnectionAdapters::AbstractAdapter::VersionMethodsAactive?,adapter_nameCcheck_all_foreign_keys_valid!,clear_cache!,close,connect!,connected?,connection_retriesDdatabase_exists?,database_exists?,dbconsole,default_timezone,disable_extension,disable_referential_integrity,discard!,disconnect!Eenable_extension,expire,extensionsFfind_cmd_and_execIindex_algorithmsLlease,logPpool=,prefetch_primary_key?,prepared_statements,prepared_statements?,preventing_writes?Rraw_connection,reconnect!,replica?,requires_reloading?,reset!,retry_deadline,roleSsavepoint_errors_invalidate_transactions?,schema_cache,schema_version,shard,supports_advisory_locks?,supports_bulk_alter?,supports_check_constraints?,supports_comments?,supports_comments_in_create?,supports_common_table_expressions?,supports_concurrent_connections?,supports_datetime_with_precision?,supports_ddl_transactions?,supports_deferrable_constraints?,supports_exclusion_constraints?,supports_explain?,supports_expression_index?,supports_extensions?,supports_foreign_keys?,supports_foreign_tables?,supports_index_include?,supports_index_sort_order?,supports_indexes_in_create?,supports_insert_conflict_target?,supports_insert_on_duplicate_skip?,supports_insert_on_duplicate_update?,supports_insert_returning?,supports_json?,supports_lazy_transactions?,supports_materialized_views?,supports_nulls_not_distinct?,supports_optimizer_hints?,supports_partial_index?,supports_partitioned_indexes?,supports_restart_db_transaction?,supports_savepoints?,supports_transaction_isolation?,supports_unique_constraints?,supports_validate_constraints?,supports_views?,supports_virtual_columns?Tthrow_away!,type_cast_config_to_boolean,type_cast_config_to_integerUunprepared_statementVvalidate_default_timezone,verify!Included ModulesActiveSupport::CallbacksActiveRecord::ConnectionAdapters::DatabaseLimitsActiveRecord::ConnectionAdapters::QueryCacheActiveRecord::ConnectionAdapters::SavepointsConstantsADAPTER_NAME="Abstract"COMMENT_REGEX=%r{(?:--.*\n)|/\*(?:[^*]|\*[^/])*\*/}EXTENDED_TYPE_MAPS=Concurrent::Map.newSIMPLE_INT=/\A\d+\z/TYPE_MAP=Type::TypeMap.new.tap { |m| initialize_type_map(m) }Attributes[R]in_use?[R]lock[R]logger[R]owner[R]pool[R]visitorClass Public methodsdatabase_exists?(config)LinkDoes the database for this adapter exist?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 361defself.database_exists?(config)new(config).database_exists?enddbconsole(config, options = {})LinkOpens a database console session.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 122defself.dbconsole(config,options= {})raiseNotImplementedErrorendfind_cmd_and_exec(commands, *args)LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 93defself.find_cmd_and_exec(commands,*args)# :doc:commands=Array(commands)dirs_on_path=ENV["PATH"].to_s.split(File::PATH_SEPARATOR)unless(ext=RbConfig::CONFIG["EXEEXT"]).empty?commands=commands.map{|cmd|"#{cmd}#{ext}"}endfull_path_command=nilfound=commands.detectdo|cmd|dirs_on_path.detectdo|path|full_path_command=File.join(path,cmd)beginstat=File.stat(full_path_command)rescueSystemCallErrorelsestat.file?&&stat.executable?endendendiffoundexecfull_path_command,*argselseabort("Couldn't find database client: #{commands.join(', ')}. Check your $PATH and try again.")endendtype_cast_config_to_boolean(config)LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 66defself.type_cast_config_to_boolean(config)ifconfig=="false"falseelseconfigendendtype_cast_config_to_integer(config)LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 56defself.type_cast_config_to_integer(config)ifconfig.is_a?(Integer)configelsifSIMPLE_INT.match?(config)config.to_ielseconfigendendvalidate_default_timezone(config)LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 74defself.validate_default_timezone(config)caseconfigwhennilwhen"utc","local"config.to_symelseraiseArgumentError,"default_timezone must be either 'utc' or 'local'"endendInstance Public methodsactive?()LinkChecks whether the connection to the database is still active. This includes checking whether the database is actually capable of responding, i.e. whether the connection isnât stale.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 651defactive?endadapter_name()LinkReturns the human-readable name of the adapter. Use mixed case - one can always use downcase if needed.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 356defadapter_nameself.class::ADAPTER_NAMEendcheck_all_foreign_keys_valid!()LinkOverride to check all foreign key constraints in a database. The adapter should raise aActiveRecord::StatementInvalidif foreign key constraints are not met.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 636defcheck_all_foreign_keys_valid!endclear_cache!(new_connection: false)LinkClear any caching the database adapter may be doing.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 732defclear_cache!(new_connection:false)if@statements@lock.synchronizedoifnew_connection@statements.resetelse@statements.clearendendendendclose()LinkCheck the connection back in to the connection poolSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 822defclosepool.checkinselfendconnect!()LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 770defconnect!verify!selfendconnected?()LinkChecks whether the connection to the database was established. This doesnât include checking whether the database is actually capable of responding, i.e. whether the connection is stale.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 644defconnected?!@raw_connection.nil?endconnection_retries()LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 217defconnection_retries(@config[:connection_retries]||1).to_ienddatabase_exists?()LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 365defdatabase_exists?connect!truerescueActiveRecord::NoDatabaseErrorfalseenddefault_timezone()LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 229defdefault_timezone@default_timezone||ActiveRecord.default_timezoneenddisable_extension(name, **)LinkThis is meant to be implemented by the adapters that support extensionsSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 571defdisable_extension(name,**)enddisable_referential_integrity()LinkOverride to turn off referential integrity while executing&block.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 629defdisable_referential_integrityyieldenddiscard!()LinkImmediately forget this connection ever existed. Unlike disconnect!, this will not communicate with the server.After calling this method, the behavior of all other methods becomes undefined. This is called internally just before a forked process gets rid of a connection that belonged to its parent.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 707defdiscard!# This should be overridden by concrete adapters.enddisconnect!()LinkDisconnects from the database if already connected. Otherwise, this method does nothing.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 693defdisconnect!@lock.synchronizedoclear_cache!(new_connection:true)reset_transaction@raw_connection_dirty=falseendendenable_extension(name, **)LinkThis is meant to be implemented by the adapters that support extensionsSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 575defenable_extension(name,**)endexpire()Linkthis method must only be called while holding connection poolâs mutexSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 313defexpireifin_use?if@owner!=ActiveSupport::IsolatedExecutionState.contextraiseActiveRecordError,"Cannot expire connection, "\"it is owned by a different thread: #{@owner}. "\"Current thread: #{ActiveSupport::IsolatedExecutionState.context}."end@idle_since=Process.clock_gettime(Process::CLOCK_MONOTONIC)@owner=nilelseraiseActiveRecordError,"Cannot expire connection, it is not currently leased."endendextensions()LinkA list of extensions, to be filled in by adapters that support them.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 617defextensions[]endindex_algorithms()LinkA list of index algorithms, to be filled by adapters that support them.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 622defindex_algorithms{}endlease()Linkthis method must only be called while holding connection poolâs mutexSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 277defleaseifin_use?msg=+"Cannot lease connection, "if@owner==ActiveSupport::IsolatedExecutionState.contextmsg<<"it is already leased by the current thread."elsemsg<<"it is already in use by a different thread: #{@owner}. "\"Current thread: #{ActiveSupport::IsolatedExecutionState.context}."endraiseActiveRecordError,msgend@owner=ActiveSupport::IsolatedExecutionState.contextendpool=(value)LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 48defpool=(value)returnifvalue.eql?(@pool)@schema_cache=nil@pool=valueendprefetch_primary_key?(table_name = nil)LinkShould primary key values be selected from their corresponding sequence before the insert statement? If true, next_sequence_value is called before each insert to set the recordâs primary key.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 405defprefetch_primary_key?(table_name=nil)falseendprepared_statements()LinkAlias for:prepared_statements?prepared_statements?()LinkAlso aliased as:prepared_statementsSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 244defprepared_statements?@prepared_statements&&!prepared_statements_disabled_cache.include?(object_id)endpreventing_writes?()LinkDetermines whether writes are currently being prevented.Returns true if the connection is a replica or returns the value ofcurrent_preventing_writes.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 237defpreventing_writes?returntrueifreplica?returnfalseifconnection_class.nil?connection_class.current_preventing_writesendraw_connection()LinkProvides access to the underlying database driver for this adapter. For example, this method returns a Mysql2::Client object in case ofMysql2Adapter, and a PG::Connection object in case ofPostgreSQLAdapter.This is useful for when you need to call a proprietary method such as PostgreSQLâs lo_* methods.Active Record cannot track if the database is getting modified using this client. If that is the case, generally youâll want to invalidate the query cache usingActiveRecord::Base.clear_query_cache.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 790defraw_connectionwith_raw_connectiondo|conn|disable_lazy_transactions!@raw_connection_dirty=trueconnendendreconnect!(restore_transactions: false)LinkDisconnects from the database if already connected, and establishes a new connection with the database. Implementors should define private reconnect instead.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 657defreconnect!(restore_transactions:false)retries_available=connection_retriesdeadline=retry_deadline&&Process.clock_gettime(Process::CLOCK_MONOTONIC)+retry_deadline@lock.synchronizedoreconnectenable_lazy_transactions!@raw_connection_dirty=false@verified=truereset_transaction(restore:restore_transactions)doclear_cache!(new_connection:true)configure_connectionendrescue=>original_exceptiontranslated_exception=translate_exception_class(original_exception,nil,nil)retry_deadline_exceeded=deadline&&deadline<Process.clock_gettime(Process::CLOCK_MONOTONIC)if!retry_deadline_exceeded&&retries_available>0retries_available-=1ifretryable_connection_error?(translated_exception)backoff(connection_retries-retries_available)retryendend@verified=falseraisetranslated_exceptionendendreplica?()LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 213defreplica?@config[:replica]||falseendrequires_reloading?()LinkReturns true if its required to reload the connection between requests for development mode.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 745defrequires_reloading?falseendreset!()LinkReset the state of this connection, directing the DBMS to clear transactions and other connection-related server-side state. Usually a database-dependent operation.If a database driver or protocol does not support such a feature, implementors may alias this toreconnect!. Otherwise, implementors should call super immediately after resetting the connection (and while still holding @lock).Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 719defreset!clear_cache!(new_connection:true)reset_transactionconfigure_connectionendretry_deadline()LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 221defretry_deadlineif@config[:retry_deadline]@config[:retry_deadline].to_felsenilendendrole()LinkThe role (e.g.:writing) for the current connection. In a non-multi role application,:writingis returned.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 298defrole@pool.roleendsavepoint_errors_invalidate_transactions?()LinkDo TransactionRollbackErrors on savepoints affect the parent transaction?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 389defsavepoint_errors_invalidate_transactions?falseendschema_cache()LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 308defschema_cache@pool.schema_cache||(@schema_cache||=BoundSchemaReflection.for_lone_connection(@pool.schema_reflection,self))endschema_version()LinkReturns the version identifier of the schema currently available in the database. This is generally equal to the number of the highest- numbered migration that has been executed, or 0 if no schema information is present / the database is empty.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 857defschema_versionpool.migration_context.current_versionendshard()LinkThe shard (e.g.:default) for the current connection. In a non-sharded application,:defaultis returned.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 304defshard@pool.shardendsupports_advisory_locks?()LinkDoes this adapter support application-enforced advisory locking?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 398defsupports_advisory_locks?falseendsupports_bulk_alter?()LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 378defsupports_bulk_alter?falseendsupports_check_constraints?()LinkDoes this adapter support creating check constraints?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 470defsupports_check_constraints?falseendsupports_comments?()LinkDoes this adapter support metadata comments on database objects (tables, columns, indexes)?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 505defsupports_comments?falseendsupports_comments_in_create?()LinkCan comments for tables, columns, and indexes be specified in create/alter table statements?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 510defsupports_comments_in_create?falseendsupports_common_table_expressions?()LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 529defsupports_common_table_expressions?falseendsupports_concurrent_connections?()LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 553defsupports_concurrent_connections?trueendsupports_datetime_with_precision?()LinkDoes this adapter support datetime with precision?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 495defsupports_datetime_with_precision?falseendsupports_ddl_transactions?()LinkDoes this adapter support DDL rollbacks in transactions? That is, would CREATE TABLE or ALTER TABLE get rolled back by a transaction?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 374defsupports_ddl_transactions?falseendsupports_deferrable_constraints?()LinkDoes this adapter support creating deferrable constraints?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 465defsupports_deferrable_constraints?falseendsupports_exclusion_constraints?()LinkDoes this adapter support creating exclusion constraints?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 475defsupports_exclusion_constraints?falseendsupports_explain?()LinkDoes this adapter support explain?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 434defsupports_explain?falseendsupports_expression_index?()LinkDoes this adapter support expression indices?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 429defsupports_expression_index?falseendsupports_extensions?()LinkDoes this adapter support database extensions?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 444defsupports_extensions?falseendsupports_foreign_keys?()LinkDoes this adapter support creating foreign key constraints?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 455defsupports_foreign_keys?falseendsupports_foreign_tables?()LinkDoes this adapter support foreign/external tables?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 520defsupports_foreign_tables?falseendsupports_index_include?()LinkDoes this adapter support including non-key columns?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 424defsupports_index_include?falseendsupports_index_sort_order?()LinkDoes this adapter support index sort order?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 414defsupports_index_sort_order?falseendsupports_indexes_in_create?()LinkDoes this adapter support creating indexes in the same statement as creating the table?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 450defsupports_indexes_in_create?falseendsupports_insert_conflict_target?()LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 549defsupports_insert_conflict_target?falseendsupports_insert_on_duplicate_skip?()LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 541defsupports_insert_on_duplicate_skip?falseendsupports_insert_on_duplicate_update?()LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 545defsupports_insert_on_duplicate_update?falseendsupports_insert_returning?()LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 537defsupports_insert_returning?falseendsupports_json?()LinkDoes this adapter support JSON data type?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 500defsupports_json?falseendsupports_lazy_transactions?()LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 533defsupports_lazy_transactions?falseendsupports_materialized_views?()LinkDoes this adapter support materialized views?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 490defsupports_materialized_views?falseendsupports_nulls_not_distinct?()LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 557defsupports_nulls_not_distinct?falseendsupports_optimizer_hints?()LinkDoes this adapter support optimizer hints?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 525defsupports_optimizer_hints?falseendsupports_partial_index?()LinkDoes this adapter support partial indices?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 419defsupports_partial_index?falseendsupports_partitioned_indexes?()LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 409defsupports_partitioned_indexes?falseendsupports_restart_db_transaction?()LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 393defsupports_restart_db_transaction?falseendsupports_savepoints?()LinkDoes this adapter support savepoints?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 383defsupports_savepoints?falseendsupports_transaction_isolation?()LinkDoes this adapter support setting the isolation level for a transaction?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 439defsupports_transaction_isolation?falseendsupports_unique_constraints?()LinkDoes this adapter support creating unique constraints?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 480defsupports_unique_constraints?falseendsupports_validate_constraints?()LinkDoes this adapter support creating invalid constraints?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 460defsupports_validate_constraints?falseendsupports_views?()LinkDoes this adapter support views?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 485defsupports_views?falseendsupports_virtual_columns?()LinkDoes this adapter support virtual columns?Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 515defsupports_virtual_columns?falseendthrow_away!()LinkRemoves the connection from the pool and disconnect it.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 726defthrow_away!pool.removeselfdisconnect!endunprepared_statement()LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 347defunprepared_statementcache=prepared_statements_disabled_cache.add?(object_id)if@prepared_statementsyieldensurecache&.delete(object_id)endverify!()LinkChecks whether the connection to the database is still active (i.e. not stale). This is done under the hood by callingactive?. If the connection is no longer active, then this method will reconnect to the database.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 752defverify!unlessactive?@lock.synchronizedoif@unconfigured_connection@raw_connection=@unconfigured_connection@unconfigured_connection=nilconfigure_connection@verified=truereturnendreconnect!(restore_transactions:true)endend@verified=trueendInstance Private methodslog(sql, name = "SQL", binds = [], type_casted_binds = [], statement_name = nil, async: false, &block)LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract_adapter.rb, line 1118deflog(sql,name="SQL",binds= [],type_casted_binds= [],statement_name=nil,async:false,&block)# :doc:@instrumenter.instrument("sql.active_record",sql:sql,name:name,binds:binds,type_casted_binds:type_casted_binds,statement_name:statement_name,async:async,connection:self,transaction:current_transaction.user_transaction.presence,row_count:0,&block)rescueActiveRecord::StatementInvalid=>exraiseex.set_query(sql,binds)end