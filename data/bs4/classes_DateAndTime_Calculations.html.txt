MethodsAafter?,all_day,all_month,all_quarter,all_week,all_year,at_beginning_of_month,at_beginning_of_quarter,at_beginning_of_week,at_beginning_of_year,at_end_of_month,at_end_of_quarter,at_end_of_week,at_end_of_yearBbefore?,beginning_of_month,beginning_of_quarter,beginning_of_week,beginning_of_yearDdays_ago,days_since,days_to_week_startEend_of_month,end_of_quarter,end_of_week,end_of_yearFfuture?Llast_month,last_quarter,last_week,last_weekday,last_yearMmonday,months_ago,months_sinceNnext_day?,next_occurring,next_quarter,next_week,next_weekdayOon_weekday?,on_weekend?Ppast?,prev_day?,prev_occurring,prev_quarter,prev_week,prev_weekdayQquarterSsundayTtoday?,tomorrow,tomorrow?Wweeks_ago,weeks_sinceYyears_ago,years_since,yesterday,yesterday?ConstantsDAYS_INTO_WEEK={
sunday: 0,
monday: 1,
tuesday: 2,
wednesday: 3,
thursday: 4,
friday: 5,
saturday: 6
}WEEKEND_DAYS=[ 6, 0 ]Instance Public methodsafter?(date_or_time)LinkReturns true if the date/time falls afterdate_or_time.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 72defafter?(date_or_time)self>date_or_timeendall_day()LinkReturns aRangerepresenting the whole day of the current date/time.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 310defall_daybeginning_of_day..end_of_dayendall_month()LinkReturns aRangerepresenting the whole month of the current date/time.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 321defall_monthbeginning_of_month..end_of_monthendall_quarter()LinkReturns aRangerepresenting the whole quarter of the current date/time.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 326defall_quarterbeginning_of_quarter..end_of_quarterendall_week(start_day = Date.beginning_of_week)LinkReturns aRangerepresenting the whole week of the current date/time. Week starts on start_day, default isDate.beginning_of_weekorconfig.beginning_of_weekwhen set.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 316defall_week(start_day=Date.beginning_of_week)beginning_of_week(start_day)..end_of_week(start_day)endall_year()LinkReturns aRangerepresenting the whole year of the current date/time.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 331defall_yearbeginning_of_year..end_of_yearendat_beginning_of_month()LinkAlias for:beginning_of_monthat_beginning_of_quarter()LinkAlias for:beginning_of_quarterat_beginning_of_week(start_day = Date.beginning_of_week)LinkAlias for:beginning_of_weekat_beginning_of_year()LinkAlias for:beginning_of_yearat_end_of_month()LinkAlias for:end_of_monthat_end_of_quarter()LinkAlias for:end_of_quarterat_end_of_week(start_day = Date.beginning_of_week)LinkAlias for:end_of_weekat_end_of_year()LinkAlias for:end_of_yearbefore?(date_or_time)LinkReturns true if the date/time falls beforedate_or_time.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 67defbefore?(date_or_time)self<date_or_timeendbeginning_of_month()LinkReturns a new date/time at the start of the month.today = Date.today # => Thu, 18 Jun 2015
today.beginning_of_month # => Mon, 01 Jun 2015DateTimeobjects will have a time set to 0:00.now = DateTime.current # => Thu, 18 Jun 2015 15:23:13 +0000
now.beginning_of_month # => Mon, 01 Jun 2015 00:00:00 +0000Also aliased as:at_beginning_of_monthSource:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 125defbeginning_of_monthfirst_hour(change(day:1))endbeginning_of_quarter()LinkReturns a new date/time at the start of the quarter.today = Date.today # => Fri, 10 Jul 2015
today.beginning_of_quarter # => Wed, 01 Jul 2015DateTimeobjects will have a time set to 0:00.now = DateTime.current # => Fri, 10 Jul 2015 18:41:29 +0000
now.beginning_of_quarter # => Wed, 01 Jul 2015 00:00:00 +0000Also aliased as:at_beginning_of_quarterSource:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 139defbeginning_of_quarterfirst_quarter_month=month-(2+month)%3beginning_of_month.change(month:first_quarter_month)endbeginning_of_week(start_day = Date.beginning_of_week)LinkReturns a new date/time representing the start of this week on the given day. Week is assumed to start onstart_day, default isDate.beginning_of_weekorconfig.beginning_of_weekwhen set.DateTimeobjects have their time set to 0:00.Also aliased as:at_beginning_of_weekSource:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 267defbeginning_of_week(start_day=Date.beginning_of_week)result=days_ago(days_to_week_start(start_day))acts_like?(:time)?result.midnight:resultendbeginning_of_year()LinkReturns a new date/time at the beginning of the year.today = Date.today # => Fri, 10 Jul 2015
today.beginning_of_year # => Thu, 01 Jan 2015DateTimeobjects will have a time set to 0:00.now = DateTime.current # => Fri, 10 Jul 2015 18:41:29 +0000
now.beginning_of_year # => Thu, 01 Jan 2015 00:00:00 +0000Also aliased as:at_beginning_of_yearSource:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 179defbeginning_of_yearchange(month:1).beginning_of_monthenddays_ago(days)LinkReturns a new date/time the specified number of days ago.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 77defdays_ago(days)advance(days:-days)enddays_since(days)LinkReturns a new date/time the specified number of days in the future.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 82defdays_since(days)advance(days:days)enddays_to_week_start(start_day = Date.beginning_of_week)LinkReturns the number of days to the start of the week on the given day. Week is assumed to start onstart_day, default isDate.beginning_of_weekorconfig.beginning_of_weekwhen set.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 258defdays_to_week_start(start_day=Date.beginning_of_week)start_day_number=DAYS_INTO_WEEK.fetch(start_day)
  (wday-start_day_number)%7endend_of_month()LinkReturns a new date/time representing the end of the month.DateTimeobjects will have a time set to 23:59:59.Also aliased as:at_end_of_monthSource:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 296defend_of_monthlast_day=::Time.days_in_month(month,year)last_hour(days_since(last_day-day))endend_of_quarter()LinkReturns a new date/time at the end of the quarter.today = Date.today # => Fri, 10 Jul 2015
today.end_of_quarter # => Wed, 30 Sep 2015DateTimeobjects will have a time set to 23:59:59.now = DateTime.current # => Fri, 10 Jul 2015 18:41:29 +0000
now.end_of_quarter # => Wed, 30 Sep 2015 23:59:59 +0000Also aliased as:at_end_of_quarterSource:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 154defend_of_quarterlast_quarter_month=month+(12-month)%3beginning_of_month.change(month:last_quarter_month).end_of_monthendend_of_week(start_day = Date.beginning_of_week)LinkReturns a new date/time representing the end of this week on the given day. Week is assumed to start onstart_day, default isDate.beginning_of_weekorconfig.beginning_of_weekwhen set.DateTimeobjects have their time set to 23:59:59.Also aliased as:at_end_of_weekSource:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 283defend_of_week(start_day=Date.beginning_of_week)last_hour(days_since(6-days_to_week_start(start_day)))endend_of_year()LinkReturns a new date/time representing the end of the year.DateTimeobjects will have a time set to 23:59:59.Also aliased as:at_end_of_yearSource:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 304defend_of_yearchange(month:12).end_of_monthendfuture?()LinkReturns true if the date/time is in the future.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 52deffuture?self>self.class.currentendlast_month()LinkShort-hand formonths_ago(1).Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 240deflast_monthmonths_ago(1)endlast_quarter()LinkAlias for:prev_quarterlast_week(start_day = Date.beginning_of_week, same_time: false)LinkAlias for:prev_weeklast_weekday()LinkAlias for:prev_weekdaylast_year()LinkShort-hand foryears_ago(1).Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 251deflast_yearyears_ago(1)endmonday()LinkReturns Monday of this week assuming that week starts on Monday.DateTimeobjects have their time set to 0:00.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 275defmondaybeginning_of_week(:monday)endmonths_ago(months)LinkReturns a new date/time the specified number of months ago.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 97defmonths_ago(months)advance(months:-months)endmonths_since(months)LinkReturns a new date/time the specified number of months in the future.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 102defmonths_since(months)advance(months:months)endnext_day?()LinkAlias for:tomorrow?next_occurring(day_of_week)LinkReturns a new date/time representing the next occurrence of the specified day of week.today = Date.today               # => Thu, 14 Dec 2017
today.next_occurring(:monday)    # => Mon, 18 Dec 2017
today.next_occurring(:thursday)  # => Thu, 21 Dec 2017Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 340defnext_occurring(day_of_week)from_now=DAYS_INTO_WEEK.fetch(day_of_week)-wdayfrom_now+=7unlessfrom_now>0advance(days:from_now)endnext_quarter()LinkShort-hand formonths_since(3).Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 215defnext_quartermonths_since(3)endnext_week(given_day_in_next_week = Date.beginning_of_week, same_time: false)LinkReturns a new date/time representing the given day in the next week.today = Date.today # => Thu, 07 May 2015
today.next_week    # => Mon, 11 May 2015Thegiven_day_in_next_weekdefaults to the beginning of the week which is determined byDate.beginning_of_weekorconfig.beginning_of_weekwhen set.today = Date.today       # => Thu, 07 May 2015
today.next_week(:friday) # => Fri, 15 May 2015DateTimeobjects have their time set to 0:00 unlesssame_timeis true.now = DateTime.current # => Thu, 07 May 2015 13:31:16 +0000
now.next_week      # => Mon, 11 May 2015 00:00:00 +0000Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 200defnext_week(given_day_in_next_week=Date.beginning_of_week,same_time:false)result=first_hour(weeks_since(1).beginning_of_week.days_since(days_span(given_day_in_next_week)))same_time?copy_time_to(result):resultendnext_weekday()LinkReturns a new date/time representing the next weekday.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 206defnext_weekdayifnext_day.on_weekend?next_week(:monday,same_time:true)elsenext_dayendendon_weekday?()LinkReturns true if the date/time does not fall on a Saturday or Sunday.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 62defon_weekday?!WEEKEND_DAYS.include?(wday)endon_weekend?()LinkReturns true if the date/time falls on a Saturday or Sunday.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 57defon_weekend?WEEKEND_DAYS.include?(wday)endpast?()LinkReturns true if the date/time is in the past.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 47defpast?self<self.class.currentendprev_day?()LinkAlias for:yesterday?prev_occurring(day_of_week)LinkReturns a new date/time representing the previous occurrence of the specified day of week.today = Date.today               # => Thu, 14 Dec 2017
today.prev_occurring(:monday)    # => Mon, 11 Dec 2017
today.prev_occurring(:thursday)  # => Thu, 07 Dec 2017Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 351defprev_occurring(day_of_week)ago=wday-DAYS_INTO_WEEK.fetch(day_of_week)ago+=7unlessago>0advance(days:-ago)endprev_quarter()LinkShort-hand formonths_ago(3).Also aliased as:last_quarterSource:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 245defprev_quartermonths_ago(3)endprev_week(start_day = Date.beginning_of_week, same_time: false)LinkReturns a new date/time representing the given day in the previous week. Week is assumed to start onstart_day, default isDate.beginning_of_weekorconfig.beginning_of_weekwhen set.DateTimeobjects have their time set to 0:00 unlesssame_timeis true.Also aliased as:last_weekSource:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 223defprev_week(start_day=Date.beginning_of_week,same_time:false)result=first_hour(weeks_ago(1).beginning_of_week.days_since(days_span(start_day)))same_time?copy_time_to(result):resultendprev_weekday()LinkReturns a new date/time representing the previous weekday.Also aliased as:last_weekdaySource:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 230defprev_weekdayifprev_day.on_weekend?copy_time_to(beginning_of_week(:friday))elseprev_dayendendquarter()LinkReturns the quarter for a date/time.Date.new(2010, 1, 31).quarter  # => 1
Date.new(2010, 4, 12).quarter  # => 2
Date.new(2010, 9, 15).quarter  # => 3
Date.new(2010, 12, 25).quarter # => 4Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 166defquarter(month/3.0).ceilendsunday()LinkReturns Sunday of this week assuming that week starts on Monday.DateTimeobjects have their time set to 23:59:59.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 290defsundayend_of_week(:monday)endtoday?()LinkReturns true if the date/time is today.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 30deftoday?to_date==::Date.currentendtomorrow()LinkReturns a new date/time representing tomorrow.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 25deftomorrowadvance(days:1)endtomorrow?()LinkReturns true if the date/time is tomorrow.Also aliased as:next_day?Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 35deftomorrow?to_date==::Date.current.tomorrowendweeks_ago(weeks)LinkReturns a new date/time the specified number of weeks ago.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 87defweeks_ago(weeks)advance(weeks:-weeks)endweeks_since(weeks)LinkReturns a new date/time the specified number of weeks in the future.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 92defweeks_since(weeks)advance(weeks:weeks)endyears_ago(years)LinkReturns a new date/time the specified number of years ago.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 107defyears_ago(years)advance(years:-years)endyears_since(years)LinkReturns a new date/time the specified number of years in the future.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 112defyears_since(years)advance(years:years)endyesterday()LinkReturns a new date/time representing yesterday.Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 20defyesterdayadvance(days:-1)endyesterday?()LinkReturns true if the date/time is yesterday.Also aliased as:prev_day?Source:show|on GitHub# File activesupport/lib/active_support/core_ext/date_and_time/calculations.rb, line 41defyesterday?to_date==::Date.current.yesterdayend