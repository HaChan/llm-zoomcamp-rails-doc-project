Welcome to RailsWhatâs Rails?Rails is a web-application framework that includes everything needed to create database-backed web applications according to theModel-View-Controller (MVC)pattern.Understanding the MVC pattern is key to understanding Rails. MVC divides your application into three layers: Model, View, and Controller, each with a specific responsibility.Model layerTheModel layerrepresents the domain model (such as Account, Product, Person, Post, etc.) and encapsulates the business logic specific to your application. In Rails, database-backed model classes are derived fromActiveRecord::Base.Active Recordallows you to present the data from database rows as objects and embellish these data objects with business logic methods. Although most Rails models are backed by a database, models can also be ordinary Ruby classes, or Ruby classes that implement a set of interfaces as provided by theActive Modelmodule.View layerTheView layeris composed of âtemplatesâ that are responsible for providing appropriate representations of your applicationâs resources. Templates can come in a variety of formats, but most view templates are HTML with embedded Ruby code (ERB files). Views are typically rendered to generate a controller response or to generate the body of an email. In Rails, View generation is handled byAction View.Controller layerTheController layeris responsible for handling incoming HTTP requests and providing a suitable response. Usually, this means returning HTML, but Rails controllers can also generate XML, JSON, PDFs, mobile-specific views, and more. Controllers load and manipulate models, and render view templates in order to generate the appropriate HTTP response. In Rails, incoming requests are routed by Action Dispatch to an appropriate controller, and controller classes are derived fromActionController::Base. Action Dispatch and Action Controller are bundled together inAction Pack.Frameworks and librariesActive Record,Active Model,Action Pack, andAction Viewcan each be used independently outside Rails.In addition to that, Rails also comes with:Action Mailer, a library to generate and send emailsAction Mailbox, a library to receive emails within a Rails applicationActive Job, a framework for declaring jobs and making them run on a variety of queuing backendsAction Cable, a framework to integrate WebSockets with a Rails applicationActive Storage, a library to attach cloud and local files to Rails applicationsAction Text, a library to handle rich text contentActive Support, a collection of utility classes and standard library extensions that are useful for Rails, and may also be used independently outside RailsGetting StartedInstall Rails at the command prompt if you haven't yet:$ gem install railsAt the command prompt, create a new Rails application:$ rails new myappwhere "myapp" is the application name.Change directory tomyappand start the web server:$ cd myapp
$ bin/rails serverRun with--helpor-hfor options.Go tohttp://localhost:3000and you'll see the Rails bootscreen with your Rails and Ruby versions.Follow the guidelines to start developing your application. You may find the following resources handy:Getting Started with RailsRuby on Rails GuidesThe API DocumentationContributingWe encourage you to contribute to Ruby on Rails! Please check out theContributing to Ruby on Rails guidefor guidelines about how to proceed.Join us!Trying to report a possible security vulnerability in Rails? Please check out oursecurity policyfor guidelines about how to proceed.Everyone interacting in Rails and its sub-projectsâ codebases, issue trackers, chat rooms, and mailing lists is expected to follow the Railscode of conduct.LicenseRuby on Rails is released under theMIT License.