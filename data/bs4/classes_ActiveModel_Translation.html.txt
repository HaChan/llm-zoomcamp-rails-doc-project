Active Model TranslationProvides integration between your object and the Rails internationalization (i18n) framework.A minimal implementation could be:class TranslatedPerson
  extend ActiveModel::Translation
end

TranslatedPerson.human_attribute_name('my_attribute')
# => "My attribute"This also provides the required class methods for hooking into the Rails internationalizationAPI, including being able to define a class-basedi18n_scopeandlookup_ancestorsto find translations in parent classes.MethodsHhuman_attribute_nameIi18n_scopeLlookup_ancestorsIncluded ModulesActiveModel::NamingInstance Public methodshuman_attribute_name(attribute, options = {})LinkTransforms attribute names into a more human format, such as âFirst nameâ instead of âfirst_nameâ.Person.human_attribute_name("first_name") # => "First name"Specifyoptionswith additional translating options.Source:show|on GitHub# File activemodel/lib/active_model/translation.rb, line 46defhuman_attribute_name(attribute,options= {})attribute=attribute.to_sifattribute.include?(".")namespace,_,attribute=attribute.rpartition(".")namespace.tr!(".","/")defaults=lookup_ancestors.mapdo|klass|:"#{i18n_scope}.attributes.#{klass.model_name.i18n_key}/#{namespace}.#{attribute}"enddefaults<<:"#{i18n_scope}.attributes.#{namespace}.#{attribute}"elsedefaults=lookup_ancestors.mapdo|klass|:"#{i18n_scope}.attributes.#{klass.model_name.i18n_key}.#{attribute}"endenddefaults<<:"attributes.#{attribute}"defaults<<options[:default]ifoptions[:default]defaults<<MISSING_TRANSLATIONtranslation=I18n.translate(defaults.shift,count:1,**options,default:defaults)translation=attribute.humanizeiftranslation==MISSING_TRANSLATIONtranslationendi18n_scope()LinkReturns thei18n_scopefor the class. Override if you want custom lookup.Source:show|on GitHub# File activemodel/lib/active_model/translation.rb, line 26defi18n_scope:activemodelendlookup_ancestors()LinkWhen localizing a string, it goes through the lookup returned by this method, which is used inActiveModel::Name#human,ActiveModel::Errors#full_messagesandActiveModel::Translation#human_attribute_name.Source:show|on GitHub# File activemodel/lib/active_model/translation.rb, line 34deflookup_ancestorsancestors.select{|x|x.respond_to?(:model_name) }end