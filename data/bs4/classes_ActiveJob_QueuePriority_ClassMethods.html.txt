Includes the ability to override the default queue priority.MethodsQqueue_with_priorityInstance Public methodsqueue_with_priority(priority = nil, &block)LinkSpecifies the priority of the queue to create the job with.class PublishToFeedJob < ActiveJob::Base
  queue_with_priority 50

  def perform(post)
    post.to_feed!
  end
endCan be given a block that will evaluate in the context of the job so that a dynamic priority can be applied:class PublishToFeedJob < ApplicationJob
  queue_with_priority do
    post = self.arguments.first

    if post.paid?
      10
    else
      50
    end
  end

  def perform(post)
    post.to_feed!
  end
endSource:show|on GitHub# File activejob/lib/active_job/queue_priority.rb, line 39defqueue_with_priority(priority=nil,&block)ifblock_given?self.priority=blockelseself.priority=priorityendend