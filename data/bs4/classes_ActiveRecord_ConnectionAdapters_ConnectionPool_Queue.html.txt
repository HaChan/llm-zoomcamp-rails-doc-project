Active Record Connection Pool QueueThreadsafe, fair, LIFO queue.  Meant to be used byConnectionPoolwith which it shares a Monitor.MethodsAadd,any_waiting?CclearDdeleteNnew,num_waitingPpollClass Public methodsnew(lock = Monitor.new)LinkSource:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract/connection_pool/queue.rb, line 14definitialize(lock=Monitor.new)@lock=lock@cond=@lock.new_cond@num_waiting=0@queue= []endInstance Public methodsadd(element)LinkAddelementto the queue.  Never blocks.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract/connection_pool/queue.rb, line 37defadd(element)synchronizedo@queue.pushelement@cond.signalendendany_waiting?()LinkTest if any threads are currently waiting on the queue.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract/connection_pool/queue.rb, line 22defany_waiting?synchronizedo@num_waiting>0endendclear()LinkRemove all elements from the queue.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract/connection_pool/queue.rb, line 52defclearsynchronizedo@queue.clearendenddelete(element)LinkIfelementis in the queue, remove and return it, ornil.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract/connection_pool/queue.rb, line 45defdelete(element)synchronizedo@queue.delete(element)endendnum_waiting()LinkReturns the number of threads currently waiting on this queue.Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract/connection_pool/queue.rb, line 30defnum_waitingsynchronizedo@num_waitingendendpoll(timeout = nil)LinkRemove the head of the queue.Iftimeoutis not given, remove and return the head of the queue if the number of available elements is strictly greater than the number of threads currently waiting (that is, donât jump ahead in line).  Otherwise, returnnil.Iftimeoutis given, block if there is no element available, waiting up totimeoutseconds for an element to become available.Raises:ActiveRecord::ConnectionTimeoutErroriftimeoutis given and no elementbecomes available withintimeoutseconds,Source:show|on GitHub# File activerecord/lib/active_record/connection_adapters/abstract/connection_pool/queue.rb, line 72defpoll(timeout=nil)synchronize{internal_poll(timeout) }end