NamespaceMODULEActionDispatch::Http::Parameters::ClassMethodsCLASSActionDispatch::Http::Parameters::ParseErrorMethodsPparameters,params,path_parametersConstantsDEFAULT_PARSERS={
Mime[:json].symbol => -> (raw_post) {
data = ActiveSupport::JSON.decode(raw_post)
data.is_a?(Hash) ? data : { _json: data }
}
}PARAMETERS_KEY="action_dispatch.request.path_parameters"Attributes[R]parameter_parsersReturns the parameter parsers.Instance Public methodsparameters()LinkReturns both GET and POST parameters in a single hash.Also aliased as:paramsSource:show|on GitHub# File actionpack/lib/action_dispatch/http/parameters.rb, line 52defparametersparams=get_header("action_dispatch.request.parameters")returnparamsifparamsparams=beginrequest_parameters.merge(query_parameters)rescueEOFErrorquery_parameters.dupendparams.merge!(path_parameters)set_header("action_dispatch.request.parameters",params)paramsendparams()LinkAlias for:parameterspath_parameters()LinkReturns a hash with the parameters used to form the path of the request. Returned hash keys are symbols:{ action: "my_action", controller: "my_controller" }Source:show|on GitHub# File actionpack/lib/action_dispatch/http/parameters.rb, line 84defpath_parametersget_header(PARAMETERS_KEY)||set_header(PARAMETERS_KEY, {})end