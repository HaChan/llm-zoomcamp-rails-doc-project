Integrationtest methods such asIntegration::RequestHelpers#getandIntegration::RequestHelpers#postreturn objects of classTestResponse, which represent the HTTP response results of the requested controller actions.SeeResponsefor more information on controller response objects.MethodsFfrom_responsePparsed_bodyRresponse_parserClass Public methodsfrom_response(response)LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/testing/test_response.rb, line 14defself.from_response(response)newresponse.status,response.headers,response.bodyendInstance Public methodsparsed_body()LinkReturns a parsed body depending on the response MIME type. When a parser corresponding to the MIME type is not found, it returns the raw body.Examplesget "/posts"
response.content_type         # => "text/html; charset=utf-8"
response.parsed_body.class    # => Nokogiri::HTML5::Document
response.parsed_body.to_html  # => "<!DOCTYPE html>\n<html>\n..."

assert_pattern { response.parsed_body.at("main") => { content: "Hello, world" } }

response.parsed_body.at("main") => {name:, content:}
assert_equal "main", name
assert_equal "Some main content", content

get "/posts.json"
response.content_type         # => "application/json; charset=utf-8"
response.parsed_body.class    # => Array
response.parsed_body          # => [{"id"=>42, "title"=>"Title"},...

assert_pattern { response.parsed_body => [{ id: 42 }] }

get "/posts/42.json"
response.content_type         # => "application/json; charset=utf-8"
response.parsed_body.class    # => ActiveSupport::HashWithIndifferentAccess
response.parsed_body          # => {"id"=>42, "title"=>"Title"}

assert_pattern { response.parsed_body => [{ title: /title/i }] }

response.parsed_body => {id:, title:}
assert_equal 42, id
assert_equal "Title", titleSource:show|on GitHub# File actionpack/lib/action_dispatch/testing/test_response.rb, line 50defparsed_body@parsed_body||=response_parser.call(body)endresponse_parser()LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/testing/test_response.rb, line 54defresponse_parser@response_parser||=RequestEncoder.parser(media_type)end