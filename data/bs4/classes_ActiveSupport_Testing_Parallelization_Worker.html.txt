MethodsAafter_forkNnewPperform_jobRrun_cleanupSsafe_record,startWwork_from_queueClass Public methodsnew(number, url)LinkSource:show|on GitHub# File activesupport/lib/active_support/testing/parallelization/worker.rb, line 7definitialize(number,url)@id=SecureRandom.uuid@number=number@url=url@setup_exception=nilendInstance Public methodsafter_fork()LinkSource:show|on GitHub# File activesupport/lib/active_support/testing/parallelization/worker.rb, line 80defafter_forkParallelization.after_fork_hooks.eachdo|cb|cb.call(@number)endendperform_job(job)LinkSource:show|on GitHub# File activesupport/lib/active_support/testing/parallelization/worker.rb, line 42defperform_job(job)klass=job[0]method=job[1]reporter=job[2]set_process_title("#{klass}##{method}")result=klass.with_info_handlerreporterdoMinitest.run_one_method(klass,method)endsafe_record(reporter,result)endrun_cleanup()LinkSource:show|on GitHub# File activesupport/lib/active_support/testing/parallelization/worker.rb, line 86defrun_cleanupParallelization.run_cleanup_hooks.eachdo|cb|cb.call(@number)endendsafe_record(reporter, result)LinkSource:show|on GitHub# File activesupport/lib/active_support/testing/parallelization/worker.rb, line 56defsafe_record(reporter,result)add_setup_exception(result)if@setup_exceptionbegin@queue.record(reporter,result)rescueDRb::DRbConnErrorresult.failures.map!do|failure|iffailure.respond_to?(:error)# minitest >5.14.0error=DRb::DRbRemoteError.new(failure.error)elseerror=DRb::DRbRemoteError.new(failure.exception)endMinitest::UnexpectedError.new(error)end@queue.record(reporter,result)rescueInterrupt@queue.interruptraiseendset_process_title("(idle)")endstart()LinkSource:show|on GitHub# File activesupport/lib/active_support/testing/parallelization/worker.rb, line 14defstartforkdoset_process_title("(starting)")DRb.stop_service@queue=DRbObject.new_with_uri(@url)@queue.start_worker(@id)beginafter_forkrescue=>@setup_exception;endwork_from_queueensureset_process_title("(stopping)")run_cleanup@queue.stop_worker(@id)endendwork_from_queue()LinkSource:show|on GitHub# File activesupport/lib/active_support/testing/parallelization/worker.rb, line 36defwork_from_queuewhilejob=@queue.popperform_job(job)endend