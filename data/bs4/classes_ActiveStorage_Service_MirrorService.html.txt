Active Storage Mirror ServiceWraps a set of mirror services and provides a singleActiveStorage::Serviceobject that will all have the files uploaded to them. Aprimaryservice is designated to answer calls to:downloadexists?urlurl_for_direct_uploadheaders_for_direct_uploadMethodsDdelete,delete_prefixedMmirrorNnewUuploadAttributes[R]mirrors[R]primaryClass Public methodsnew(primary:, mirrors:)LinkSource:show|on GitHub# File activestorage/lib/active_storage/service/mirror_service.rb, line 31definitialize(primary:,mirrors:)@primary,@mirrors=primary,mirrorsendInstance Public methodsdelete(key)LinkDelete the file at thekeyon all services.Source:show|on GitHub# File activestorage/lib/active_storage/service/mirror_service.rb, line 45defdelete(key)perform_across_services:delete,keyenddelete_prefixed(prefix)LinkDelete files at keys starting with theprefixon all services.Source:show|on GitHub# File activestorage/lib/active_storage/service/mirror_service.rb, line 50defdelete_prefixed(prefix)perform_across_services:delete_prefixed,prefixendmirror(key, checksum:)LinkCopy the file at thekeyfrom the primary service to each of the mirrors where it doesnât already exist.Source:show|on GitHub# File activestorage/lib/active_storage/service/mirror_service.rb, line 59defmirror(key,checksum:)instrument:mirror,key:key,checksum:checksumdoif(mirrors_in_need_of_mirroring=mirrors.select{|service|!service.exist?(key) }).any?primary.open(key,checksum:checksum)do|io|mirrors_in_need_of_mirroring.eachdo|service|io.rewindservice.uploadkey,io,checksum:checksumendendendendendupload(key, io, checksum: nil, **options)LinkUpload theioto thekeyspecified to all services. The upload to the primary service is done synchronously whereas the upload to the mirrors is done asynchronously. If achecksumis provided, all services will ensure a match when the upload has completed or raise anActiveStorage::IntegrityError.Source:show|on GitHub# File activestorage/lib/active_storage/service/mirror_service.rb, line 38defupload(key,io,checksum:nil,**options)io.rewindprimary.uploadkey,io,checksum:checksum,**optionsmirror_laterkey,checksum:checksumend