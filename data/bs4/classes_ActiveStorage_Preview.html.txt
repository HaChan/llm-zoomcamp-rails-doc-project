Active Storage PreviewSome non-image blobs can be previewed: that is, they can be presented as images. A video blob can be previewed by extracting its first frame, and a PDF blob can be previewed by extracting its first page.A previewer extracts a preview image from a blob. Active Storage provides previewers for videos and PDFs.ActiveStorage::Previewer::VideoPrevieweris used for videos whereasActiveStorage::Previewer::PopplerPDFPreviewerandActiveStorage::Previewer::MuPDFPreviewerare used for PDFs. Build custom previewers by subclassingActiveStorage::Previewerand implementing the requisite methods. Consult theActiveStorage::Previewerdocumentation for more details on whatâs required of previewers.To choose the previewer for a blob, Active Storage callsaccept?on each registered previewer in order. It uses the first previewer for whichaccept?returns true when given the blob. In a Rails application, add or remove previewers by manipulatingRails.application.config.active_storage.previewersin an initializer:Rails.application.config.active_storage.previewers
# => [ ActiveStorage::Previewer::PopplerPDFPreviewer, ActiveStorage::Previewer::MuPDFPreviewer, ActiveStorage::Previewer::VideoPreviewer ]

# Add a custom previewer for Microsoft Office documents:
Rails.application.config.active_storage.previewers << DOCXPreviewer
# => [ ActiveStorage::Previewer::PopplerPDFPreviewer, ActiveStorage::Previewer::MuPDFPreviewer, ActiveStorage::Previewer::VideoPreviewer, DOCXPreviewer ]Outside of a Rails application, modifyActiveStorage.previewersinstead.The built-in previewers rely on third-party system libraries. Specifically, the built-in video previewer requiresFFmpeg. Two PDF previewers are provided: one requiresPoppler, and the other requiresmuPDF(version 1.8 or newer). To preview PDFs, install either Poppler or muPDF.These libraries are not provided by Rails. You must install them yourself to use the built-in previewers. Before you install and use third-party software, make sure you understand the licensing implications of doing so.NamespaceCLASSActiveStorage::Preview::UnprocessedErrorMethodsDdownloadIimageKkeyNnewPprocessedUurlAttributes[R]blob[R]variationClass Public methodsnew(blob, variation_or_variation_key)LinkSource:show|on GitHub# File activestorage/app/models/active_storage/preview.rb, line 42definitialize(blob,variation_or_variation_key)@blob,@variation=blob,ActiveStorage::Variation.wrap(variation_or_variation_key)endInstance Public methodsdownload(&block)LinkDownloads the file associated with this previewâs variant. If no block is given, the entire file is read into memory and returned. Thatâll use a lot of RAM for very large files. If a block is given, then the download is streamed and yielded in chunks. RaisesActiveStorage::Preview::UnprocessedErrorif the preview has not been processed yet.Source:show|on GitHub# File activestorage/app/models/active_storage/preview.rb, line 90defdownload(&block)ifprocessed?presentation.download(&block)elseraiseUnprocessedErrorendendimage()LinkReturns the blobâs attached preview image.Source:show|on GitHub# File activestorage/app/models/active_storage/preview.rb, line 59defimageblob.preview_imageendkey()LinkReturns a combination key of the blob and the variation that together identifies a specific variant.Source:show|on GitHub# File activestorage/app/models/active_storage/preview.rb, line 77defkeyifprocessed?presentation.keyelseraiseUnprocessedErrorendendprocessed()LinkProcesses the preview if it has not been processed yet. Returns the receivingActiveStorage::Previewinstance for convenience:blob.preview(resize_to_limit: [100, 100]).processed.urlProcessing a preview generates an image from its blob and attaches the preview image to the blob. Because the preview image is stored with the blob, it is only generated once.Source:show|on GitHub# File activestorage/app/models/active_storage/preview.rb, line 52defprocessedprocessunlessprocessed?variant.processedifvariant?selfendurl(**options)LinkReturns the URL of the previewâs variant on the service. RaisesActiveStorage::Preview::UnprocessedErrorif the preview has not been processed yet.This method synchronously processes a variant of the preview image, so do not call it in views. Instead, generate a stable URL that redirects to the URL returned by this method.Source:show|on GitHub# File activestorage/app/models/active_storage/preview.rb, line 68defurl(**options)ifprocessed?presentation.url(**options)elseraiseUnprocessedErrorendend