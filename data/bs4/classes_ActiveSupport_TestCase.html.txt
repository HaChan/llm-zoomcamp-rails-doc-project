MethodsAassert_no_match,assert_not_empty,assert_not_equal,assert_not_in_delta,assert_not_in_epsilon,assert_not_includes,assert_not_instance_of,assert_not_kind_of,assert_not_nil,assert_not_operator,assert_not_predicate,assert_not_respond_to,assert_not_sameFfixture_paths,fixture_paths=Pparallelize,parallelize_setup,parallelize_teardownTtest_order,test_order=Included ModulesActiveSupport::Testing::AssertionsActiveSupport::Testing::ErrorReporterAssertionsActiveSupport::Testing::DeprecationActiveSupport::Testing::ConstantStubbingActiveSupport::Testing::TimeHelpersActiveSupport::Testing::FileFixturesConstantsAssertion=Minitest::AssertionClass Public methodsfixture_pathsLinkReturns theActiveRecord::FixtureSetcollection.In yourtest_helper.rbyou must haverequire "rails/test_help".Source:on GitHub# File activesupport/lib/active_support/test_case.rb, line 122fixture_paths=(fixture_paths)LinkSets the given path to the fixture set.Can also append multiple paths.ActiveSupport::TestCase.fixture_paths << "component1/test/fixtures"In yourtest_helper.rbyou must haverequire "rails/test_help".Source:on GitHub# File activesupport/lib/active_support/test_case.rb, line 128parallelize(workers: :number_of_processors, with: :processes, threshold: ActiveSupport.test_parallelization_threshold)LinkParallelizes the test suite.Takes aworkersargument that controls how many times the process is forked. For each process a new database will be created suffixed with the worker number.test-database-0
test-database-1IfENV["PARALLEL_WORKERS"]is set the workers argument will be ignored and the environment variable will be used instead. This is useful for CI environments, or other environments where you may need more workers than you do for local testing.If the number of workers is set to1or fewer, the tests will not be parallelized.Ifworkersis set to:number_of_processors, the number of workers will be set to the actual core count on the machine you are on.The default parallelization method is to fork processes. If youâd like to use threads instead you can passwith: :threadsto theparallelizemethod. Note the threaded parallelization does not create multiple databases and will not work with system tests.parallelize(workers: :number_of_processors, with: :threads)The threaded parallelization uses minitestâs parallel executor directly. The processes parallelization uses a Ruby DRb server.Because parallelization presents an overhead, it is only enabled when the number of tests to run is above thethresholdparam. The default value is 50, and itâs configurable viaconfig.active_support.test_parallelization_threshold.Source:show|on GitHub# File activesupport/lib/active_support/test_case.rb, line 81defparallelize(workers::number_of_processors,with::processes,threshold:ActiveSupport.test_parallelization_threshold)workers=Concurrent.processor_countifworkers==:number_of_processorsworkers=ENV["PARALLEL_WORKERS"].to_iifENV["PARALLEL_WORKERS"]Minitest.parallel_executor=ActiveSupport::Testing::ParallelizeExecutor.new(size:workers,with:with,threshold:threshold)endparallelize_setup(&block)LinkSet up hook for parallel testing. This can be used if you have multiple databases or any behavior that needs to be run after the process is forked but before the tests run.Note: this feature is not available with the threaded parallelization.In yourtest_helper.rbadd the following:class ActiveSupport::TestCase
  parallelize_setup do
    # create databases
  end
endSource:show|on GitHub# File activesupport/lib/active_support/test_case.rb, line 101defparallelize_setup(&block)ActiveSupport::Testing::Parallelization.after_fork_hook(&block)endparallelize_teardown(&block)LinkClean up hook for parallel testing. This can be used to drop databases if your app uses multiple write/read databases or other clean up before the tests finish. This runs before the forked process is closed.Note: this feature is not available with the threaded parallelization.In yourtest_helper.rbadd the following:class ActiveSupport::TestCase
  parallelize_teardown do
    # drop databases
  end
endSource:show|on GitHub# File activesupport/lib/active_support/test_case.rb, line 118defparallelize_teardown(&block)ActiveSupport::Testing::Parallelization.run_cleanup_hook(&block)endtest_order()LinkReturns the order in which test cases are run.ActiveSupport::TestCase.test_order # => :randomPossible values are:random,:parallel,:alpha,:sorted. Defaults to:random.Source:show|on GitHub# File activesupport/lib/active_support/test_case.rb, line 44deftest_orderActiveSupport.test_order||=:randomendtest_order=(new_order)LinkSets the order in which test cases are run.ActiveSupport::TestCase.test_order = :random # => :randomValid values are::random(to run tests in random order):parallel(to run tests in parallel):sorted(to run tests alphabetically by method name):alpha(equivalent to:sorted)Source:show|on GitHub# File activesupport/lib/active_support/test_case.rb, line 34deftest_order=(new_order)ActiveSupport.test_order=new_orderendInstance Public methodsassert_no_match(matcher, obj, msg = nil)LinkAlias for:refute_matchSource:on GitHub# File activesupport/lib/active_support/test_case.rb, line 233assert_not_empty(obj, msg = nil)LinkAlias for:refute_emptySource:on GitHub# File activesupport/lib/active_support/test_case.rb, line 156assert_not_equal(exp, act, msg = nil)LinkAlias for:refute_equalSource:on GitHub# File activesupport/lib/active_support/test_case.rb, line 167assert_not_in_delta(exp, act, delta = 0.001, msg = nil)LinkAlias for:refute_in_deltaSource:on GitHub# File activesupport/lib/active_support/test_case.rb, line 178assert_not_in_epsilon(a, b, epsilon = 0.001, msg = nil)LinkAlias for:refute_in_epsilonSource:on GitHub# File activesupport/lib/active_support/test_case.rb, line 189assert_not_includes(collection, obj, msg = nil)LinkAlias for:refute_includesSource:on GitHub# File activesupport/lib/active_support/test_case.rb, line 200assert_not_instance_of(cls, obj, msg = nil)LinkAlias for:refute_instance_ofSource:on GitHub# File activesupport/lib/active_support/test_case.rb, line 211assert_not_kind_of(cls, obj, msg = nil)LinkAlias for:refute_kind_ofSource:on GitHub# File activesupport/lib/active_support/test_case.rb, line 222assert_not_nil(obj, msg = nil)LinkAlias for:refute_nilSource:on GitHub# File activesupport/lib/active_support/test_case.rb, line 244assert_not_operator(o1, op, o2 = UNDEFINED, msg = nil)LinkAlias for:refute_operatorSource:on GitHub# File activesupport/lib/active_support/test_case.rb, line 255assert_not_predicate(o1, op, msg = nil)LinkAlias for:refute_predicateSource:on GitHub# File activesupport/lib/active_support/test_case.rb, line 266assert_not_respond_to(obj, meth, msg = nil)LinkAlias for:refute_respond_toSource:on GitHub# File activesupport/lib/active_support/test_case.rb, line 277assert_not_same(exp, act, msg = nil)LinkAlias for:refute_sameSource:on GitHub# File activesupport/lib/active_support/test_case.rb, line 288