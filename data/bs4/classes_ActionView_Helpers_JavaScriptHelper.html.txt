Action View JavaScript HelpersMethodsEescape_javascriptJj,javascript_tagConstantsJS_ESCAPE_MAP={
"\\"    => "\\\\",
"</"    => '<\/',
"\r\n"  => '\n',
"\n"    => '\n',
"\r"    => '\n',
'"'     => '\\"',
"'"     => "\\'",
"`"     => "\\`",
"$"     => "\\$"
}Instance Public methodsescape_javascript(javascript)LinkEscapes carriage returns and single and double quotes for JavaScript segments.Also available through the alias j(). This is particularly helpful in JavaScript responses, like:$('some_element').replaceWith('<%= j render 'some/element_template' %>');Also aliased as:jSource:show|on GitHub# File actionview/lib/action_view/helpers/javascript_helper.rb, line 28defescape_javascript(javascript)javascript=javascript.to_sifjavascript.empty?result=""elseresult=javascript.gsub(/(\\|<\/|\r\n|\342\200\250|\342\200\251|[\n\r"']|[`]|[$])/u,JS_ESCAPE_MAP)endjavascript.html_safe??result.html_safe:resultendj(javascript)LinkAlias for:escape_javascriptjavascript_tag(content_or_options_with_block = nil, html_options = {}, &block)LinkReturns a JavaScript tag with thecontentinside. Example:javascript_tag "alert('All is good')"Returns:<script>
//<![CDATA[
alert('All is good')
//]]>
</script>html_optionsmay be a hash of attributes for the<script>tag.javascript_tag "alert('All is good')", type: 'application/javascript'Returns:<script type="application/javascript">
//<![CDATA[
alert('All is good')
//]]>
</script>Instead of passing the content as an argument, you can also use a block in which case, you pass yourhtml_optionsas the first parameter.<%= javascript_tag type: 'application/javascript' do -%>
  alert('All is good')
<% end -%>If you have a content security policy enabled then you can add an automatic nonce value by passingnonce: trueas part ofhtml_options. Example:<%= javascript_tag nonce: true do -%>
  alert('All is good')
<% end -%>Source:show|on GitHub# File actionview/lib/action_view/helpers/javascript_helper.rb, line 75defjavascript_tag(content_or_options_with_block=nil,html_options= {},&block)content=ifblock_given?html_options=content_or_options_with_blockifcontent_or_options_with_block.is_a?(Hash)capture(&block)elsecontent_or_options_with_blockendifhtml_options[:nonce]==truehtml_options[:nonce] =content_security_policy_nonceendcontent_tag("script",javascript_cdata_section(content),html_options)end