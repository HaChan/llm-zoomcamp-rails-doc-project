Action DispatchShowExceptionsThis middleware rescues any exception returned by the application and calls an exceptions app that will wrap it in a format for the end user.The exceptions app should be passed as a parameter on initialization ofShowExceptions. Every time there is an exception,ShowExceptionswill store the exception inenv["action_dispatch.exception"], rewrite thePATH_INFOto the exception status code, and call the Rack app.InRailsapplications, the exceptions app can be configured withconfig.exceptions_app, which defaults toActionDispatch::PublicExceptions.If the application returns a response with theX-Cascadeheader set to"pass", this middleware will send an empty response as a result with the correct status code. If any exception happens inside the exceptions app, this middleware catches the exceptions and returns a failsafe response.MethodsCcallNnewClass Public methodsnew(app, exceptions_app)LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/middleware/show_exceptions.rb, line 26definitialize(app,exceptions_app)@app=app@exceptions_app=exceptions_appendInstance Public methodscall(env)LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/middleware/show_exceptions.rb, line 31defcall(env)@app.call(env)rescueException=>exceptionrequest=ActionDispatch::Request.newenvbacktrace_cleaner=request.get_header("action_dispatch.backtrace_cleaner")wrapper=ExceptionWrapper.new(backtrace_cleaner,exception)request.set_header"action_dispatch.exception",wrapper.unwrapped_exceptionrequest.set_header"action_dispatch.report_exception",!wrapper.rescue_response?ifwrapper.show?(request)render_exception(request.dup,wrapper)elseraiseexceptionendend