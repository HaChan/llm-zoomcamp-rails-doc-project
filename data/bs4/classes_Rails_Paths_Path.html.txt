Methods#<<Cchildren,concatEeach,existent,existent_directories,expandedFfirstLlastNnewPpaths,pushTto_a,to_aryUunshiftIncluded ModulesEnumerableAttributes[RW]globClass Public methodsnew(root, current, paths, options = {})LinkSource:show|on GitHub# File railties/lib/rails/paths.rb, line 119definitialize(root,current,paths,options= {})@paths=paths@current=current@root=root@glob=options[:glob]@exclude=options[:exclude]options[:autoload_once]?autoload_once!:skip_autoload_once!options[:eager_load]?eager_load!:skip_eager_load!options[:autoload]?autoload!:skip_autoload!options[:load_path]?load_path!:skip_load_path!endInstance Public methods<<(path)LinkAlso aliased as:pushSource:show|on GitHub# File railties/lib/rails/paths.rb, line 171def<<(path)@paths<<pathendchildren()LinkSource:show|on GitHub# File railties/lib/rails/paths.rb, line 136defchildrenkeys=@root.keys.find_all{|k|k.start_with?(@current)&&k!=@current}@root.values_at(*keys.sort)endconcat(paths)LinkSource:show|on GitHub# File railties/lib/rails/paths.rb, line 176defconcat(paths)@paths.concatpathsendeach(&block)LinkSource:show|on GitHub# File railties/lib/rails/paths.rb, line 167defeach(&block)@paths.each(&block)endexistent()LinkReturns all expanded paths but only if they exist in the filesystem.Source:show|on GitHub# File railties/lib/rails/paths.rb, line 220defexistentexpanded.selectdo|f|does_exist=File.exist?(f)if!does_exist&&File.symlink?(f)raise"File #{f.inspect} is a symlink that does not point to a valid file"enddoes_existendendexistent_directories()LinkSource:show|on GitHub# File railties/lib/rails/paths.rb, line 231defexistent_directoriesexpanded.select{|d|File.directory?(d) }endexpanded()LinkExpands all paths against the root and return all unique values.Also aliased as:to_aSource:show|on GitHub# File railties/lib/rails/paths.rb, line 201defexpandedraise"You need to set a path root"unless@root.pathresult= []eachdo|path|path=File.expand_path(path,@root.path)if@glob&&File.directory?(path)result.concatfiles_in(path)elseresult<<pathendendresult.uniq!resultendfirst()LinkSource:show|on GitHub# File railties/lib/rails/paths.rb, line 143deffirstexpanded.firstendlast()LinkSource:show|on GitHub# File railties/lib/rails/paths.rb, line 147deflastexpanded.lastendpaths()LinkSource:show|on GitHub# File railties/lib/rails/paths.rb, line 188defpathsraise"You need to set a path root"unless@root.pathmapdo|p|Pathname.new(@root.path).join(p)endendpush(path)LinkAlias for:<<to_a()LinkAlias for:expandedto_ary()LinkSource:show|on GitHub# File railties/lib/rails/paths.rb, line 184defto_ary@pathsendunshift(*paths)LinkSource:show|on GitHub# File railties/lib/rails/paths.rb, line 180defunshift(*paths)@paths.unshift(*paths)end