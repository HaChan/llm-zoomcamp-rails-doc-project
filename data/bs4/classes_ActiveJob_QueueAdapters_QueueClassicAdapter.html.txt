queue_classic adapter for Active Jobqueue_classic provides a simple interface to a PostgreSQL-backed message queue. queue_classic specializes in concurrent locking and minimizing database load while providing a simple, intuitive developer experience. queue_classic assumes that you are already using PostgreSQL in your production environment and that adding another dependency (e.g. redis, beanstalkd, 0mq) is undesirable.Read more about queue_classichere.To use queue_classic set the queue_adapter config to:queue_classic.Rails.application.config.active_job.queue_adapter = :queue_classicMethodsBbuild_queueNnewClass Public methodsnew(enqueue_after_transaction_commit: false)LinkSource:show|on GitHub# File activejob/lib/active_job/queue_adapters/queue_classic_adapter.rb, line 22definitialize(enqueue_after_transaction_commit:false)@enqueue_after_transaction_commit=enqueue_after_transaction_commitendInstance Public methodsbuild_queue(queue_name)LinkBuilds aQC::Queueobject to schedule jobs on.If you have a customQC::Queuesubclass youâll need to subclassActiveJob::QueueAdapters::QueueClassicAdapterand override thebuild_queuemethod.Source:show|on GitHub# File activejob/lib/active_job/queue_adapters/queue_classic_adapter.rb, line 53defbuild_queue(queue_name)QC::Queue.new(queue_name)end