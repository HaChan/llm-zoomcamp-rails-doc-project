A container for responses available from the current controller for requests for different mime-types sent to a particular action.The public controller methodsrespond_tomay be called with a block that is used to define responses to different mime-types, e.g. forrespond_to:respond_to do |format|
  format.html
  format.xml { render xml: @people }
endIn this usage, the argument passed to the block (formatabove) is an instance of theActionController::MimeResponds::Collectorclass. This object serves as a container in which available responses can be stored by calling any of the dynamically generated, mime-type-specific methods such ashtml,xmletc on theCollector. Each response is represented by a corresponding block if present.A subsequent call tonegotiate_format(request)will enable theCollectorto determine which specific mime-type it should respond with for the current request, with this response then being accessible by callingresponse.MethodsAall,any,any_response?CcustomNnegotiate_format,newRresponseIncluded ModulesAbstractController::CollectorAttributes[RW]formatClass Public methodsnew(mimes, variant = nil)LinkSource:show|on GitHub# File actionpack/lib/action_controller/metal/mime_responds.rb, line 255definitialize(mimes,variant=nil)@responses= {}@variant=variantmimes.each{|mime|@responses[Mime[mime]] =nil}endInstance Public methodsall(*args, &block)LinkAlias for:anyany(*args, &block)LinkAlso aliased as:allSource:show|on GitHub# File actionpack/lib/action_controller/metal/mime_responds.rb, line 262defany(*args,&block)ifargs.any?args.each{|type|send(type,&block) }elsecustom(Mime::ALL,&block)endendany_response?()LinkSource:show|on GitHub# File actionpack/lib/action_controller/metal/mime_responds.rb, line 280defany_response?!@responses.fetch(format,false)&&@responses[Mime::ALL]endcustom(mime_type, &block)LinkSource:show|on GitHub# File actionpack/lib/action_controller/metal/mime_responds.rb, line 271defcustom(mime_type,&block)mime_type=Mime::Type.lookup(mime_type.to_s)unlessmime_type.is_a?(Mime::Type)@responses[mime_type]||=ifblock_given?blockelseVariantCollector.new(@variant)endendnegotiate_format(request)LinkSource:show|on GitHub# File actionpack/lib/action_controller/metal/mime_responds.rb, line 297defnegotiate_format(request)@format=request.negotiate_mime(@responses.keys)endresponse()LinkSource:show|on GitHub# File actionpack/lib/action_controller/metal/mime_responds.rb, line 284defresponseresponse=@responses.fetch(format,@responses[Mime::ALL])ifresponse.is_a?(VariantCollector)# `format.html.phone` - variant inline syntaxresponse.variantelsifresponse.nil?||response.arity==0# `format.html` - just a format, call its blockresponseelse# `format.html{ |variant| variant.phone }` - variant block syntaxvariant_collector=VariantCollector.new(@variant)response.call(variant_collector)# call format block with variants collectorvariant_collector.variantendend