Active Record Database ConfigurationsActiveRecord::DatabaseConfigurationsreturns an array ofDatabaseConfigobjects that are constructed from the applicationâs database configuration hash or URL string.The array ofDatabaseConfigobjects in an application default to either aHashConfigorUrlConfig. You can retrieve your applicationâs config by usingActiveRecord::Base.configurations.If you register a custom handler, objects will be created according to the conditions of the handler. See::register_db_config_handlerfor more on registering custom handlers.NamespaceCLASSActiveRecord::DatabaseConfigurations::HashConfigCLASSActiveRecord::DatabaseConfigurations::InvalidConfigurationErrorCLASSActiveRecord::DatabaseConfigurations::UrlConfigMethodsBblank?Cconfigs_forEempty?Ffind_db_configNnewRregister_db_config_handlerAttributes[R]configurationsClass Public methodsnew(configurations = {})LinkSource:show|on GitHub# File activerecord/lib/active_record/database_configurations.rb, line 73definitialize(configurations= {})@configurations=build_configs(configurations)endregister_db_config_handler(&block)LinkAllows an application to register a custom handler for database configuration objects. This is useful for creating a custom handler that responds to methods your application needs but Active Record doesnât implement. For example if you are using Vitess, you may want your Vitess configurations to respond to âsharded?`. To implement this define the following in an initializer:ActiveRecord::DatabaseConfigurations.register_db_config_handler do |env_name, name, url, config|
  next unless config.key?(:vitess)
  VitessConfig.new(env_name, name, config)
endNote: applications must handle the condition in which custom config should be created in your handler registration otherwise all objects will use the custom handler.Then define yourVitessConfigto respond to the methods your application needs. It is recommended that you inherit from one of the existing database config classes to avoid having to reimplement all methods. Custom config handlers should only implement methods Active Record does not.class VitessConfig < ActiveRecord::DatabaseConfigurations::UrlConfig
  def sharded?
    configuration_hash.fetch("sharded", false)
  end
endFor configs that have a:vitesskey, aVitessConfigobject will be created instead of aUrlConfig.Source:show|on GitHub# File activerecord/lib/active_record/database_configurations.rb, line 61defself.register_db_config_handler(&block)db_config_handlers<<blockendInstance Public methodsblank?()LinkAlias for:empty?configs_for(env_name: nil, name: nil, config_key: nil, include_hidden: false)LinkCollects the configs for the environment and optionally the specification name passed in. To include replica configurations passinclude_hidden: true.If a name is provided a singleDatabaseConfigobject will be returned, otherwise an array ofDatabaseConfigobjects will be returned that corresponds with the environment and type requested.Optionsenv_name:The environment name. Defaults tonilwhich will collect configs for all environments.name:The db config name (i.e. primary, animals, etc.). Defaults tonil. If noenv_nameis specified the config for the default env and the passednamewill be returned.config_key:Selects configs that contain a particular key in the configuration hash. Useful for selecting configs that use a custom db config handler or finding configs with hashes that contain a particular key.include_hidden:Determines whether to include replicas and configurations hidden bydatabase_tasks: falsein the returned list. Most of the time weâre only iterating over the primary connections (i.e. migrations donât need to run for the write and read connection). Defaults tofalse.Source:show|on GitHub# File activerecord/lib/active_record/database_configurations.rb, line 98defconfigs_for(env_name:nil,name:nil,config_key:nil,include_hidden:false)env_name||=default_envifnameconfigs=env_with_configs(env_name)unlessinclude_hiddenconfigs=configs.selectdo|db_config|db_config.database_tasks?endendifconfig_keyconfigs=configs.selectdo|db_config|db_config.configuration_hash.key?(config_key)endendifnameconfigs.finddo|db_config|db_config.name==name.to_sendelseconfigsendendempty?()LinkChecks if the applicationâs configurations are empty.Also aliased as:blank?Source:show|on GitHub# File activerecord/lib/active_record/database_configurations.rb, line 150defempty?configurations.empty?endfind_db_config(env)LinkReturns a singleDatabaseConfigobject based on the requested environment.If the application has multiple databasesfind_db_configwill return the firstDatabaseConfigfor the environment.Source:show|on GitHub# File activerecord/lib/active_record/database_configurations.rb, line 127deffind_db_config(env)env=env.to_sconfigurations.finddo|db_config|db_config.for_current_env?&&(db_config.env_name==env||db_config.name==env)end||configurations.finddo|db_config|db_config.env_name==envendend