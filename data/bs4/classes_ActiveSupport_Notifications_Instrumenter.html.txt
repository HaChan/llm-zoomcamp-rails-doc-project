Instrumenters are stored in a thread local.MethodsBbuild_handleFfinish,finish_with_stateIinstrumentNnewSstartAttributes[R]idClass Public methodsnew(notifier)LinkSource:show|on GitHub# File activesupport/lib/active_support/notifications/instrumenter.rb, line 12definitialize(notifier)unlessnotifier.respond_to?(:build_handle)notifier=LegacyHandle::Wrapper.new(notifier)end@id=unique_id@notifier=notifierendInstance Public methodsbuild_handle(name, payload)LinkReturns a âhandleâ for an event with the givennameandpayload.startandfinishmust each be called exactly once on the returned object.Where possible, itâs best to useinstrument, which will record the start and finish of the event and correctly handle any exceptions.build_handleis a low-level API intended for cases where usinginstrumentisnât possible.SeeActiveSupport::Notifications::Fanout::Handle.Source:show|on GitHub# File activesupport/lib/active_support/notifications/instrumenter.rb, line 78defbuild_handle(name,payload)@notifier.build_handle(name,@id,payload)endfinish(name, payload)LinkSend a finish notification withnameandpayload.Source:show|on GitHub# File activesupport/lib/active_support/notifications/instrumenter.rb, line 92deffinish(name,payload)@notifier.finishname,@id,payloadendfinish_with_state(listeners_state, name, payload)LinkSource:show|on GitHub# File activesupport/lib/active_support/notifications/instrumenter.rb, line 96deffinish_with_state(listeners_state,name,payload)@notifier.finishname,@id,payload,listeners_stateendinstrument(name, payload = {})LinkGiven a block, instrument it by measuring the time taken to execute and publish it. Without a block, simply send a message via the notifier. Notice that events get sent even if an error occurs in the passed-in block.Source:show|on GitHub# File activesupport/lib/active_support/notifications/instrumenter.rb, line 54definstrument(name,payload= {})handle=build_handle(name,payload)handle.startbeginyieldpayloadifblock_given?rescueException=>epayload[:exception] = [e.class.name,e.message]payload[:exception_object] =eraiseeensurehandle.finishendendstart(name, payload)LinkSend a start notification withnameandpayload.Source:show|on GitHub# File activesupport/lib/active_support/notifications/instrumenter.rb, line 87defstart(name,payload)@notifier.startname,@id,payloadend