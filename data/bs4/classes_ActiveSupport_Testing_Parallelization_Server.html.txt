Methods#<<Aactive_workers?IinterruptNnewPpopRrecordSshutdown,start_worker,stop_workerIncluded ModulesDRb::DRbUndumpedClass Public methodsnew()LinkSource:show|on GitHub# File activesupport/lib/active_support/testing/parallelization/server.rb, line 12definitialize@queue=Queue.new@active_workers=Concurrent::Map.new@in_flight=Concurrent::Map.newendInstance Public methods<<(o)LinkSource:show|on GitHub# File activesupport/lib/active_support/testing/parallelization/server.rb, line 28def<<(o)o[2] =DRbObject.new(o[2])ifo@queue<<oendactive_workers?()LinkSource:show|on GitHub# File activesupport/lib/active_support/testing/parallelization/server.rb, line 48defactive_workers?@active_workers.size>0endinterrupt()LinkSource:show|on GitHub# File activesupport/lib/active_support/testing/parallelization/server.rb, line 52definterrupt@queue.clearendpop()LinkSource:show|on GitHub# File activesupport/lib/active_support/testing/parallelization/server.rb, line 33defpopiftest=@queue.pop@in_flight[[test[0].to_s,test[1]]] =testtestendendrecord(reporter, result)LinkSource:show|on GitHub# File activesupport/lib/active_support/testing/parallelization/server.rb, line 18defrecord(reporter,result)raiseDRb::DRbConnErrorifresult.is_a?(DRb::DRbUnknown)@in_flight.delete([result.klass,result.name])reporter.synchronizedoreporter.record(result)endendshutdown()LinkSource:show|on GitHub# File activesupport/lib/active_support/testing/parallelization/server.rb, line 56defshutdown# Wait for initial queue to drainwhile@queue.length!=0sleep0.1end@queue.close# Wait until all workers have finishedwhileactive_workers?sleep0.1end@in_flight.values.eachdo|(klass,name,reporter)|result=Minitest::Result.from(klass.new(name))error=RuntimeError.new("result not reported")error.set_backtrace([""])result.failures<<Minitest::UnexpectedError.new(error)reporter.synchronizedoreporter.record(result)endendendstart_worker(worker_id)LinkSource:show|on GitHub# File activesupport/lib/active_support/testing/parallelization/server.rb, line 40defstart_worker(worker_id)@active_workers[worker_id] =trueendstop_worker(worker_id)LinkSource:show|on GitHub# File activesupport/lib/active_support/testing/parallelization/server.rb, line 44defstop_worker(worker_id)@active_workers.delete(worker_id)end