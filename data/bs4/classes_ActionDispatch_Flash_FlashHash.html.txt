Methods#[],[]=Aalert,alert=CclearDdelete,discardEeach,empty?Iinitialize_copyKkeep,key?,keysNnotice,notice=,now,now_is_loaded?Sstringify_arrayTto_hashIncluded ModulesEnumerableInstance Public methods[](k)LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/middleware/flash.rb, line 169def[](k)@flashes[k.to_s]end[]=(k, v)LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/middleware/flash.rb, line 163def[]=(k,v)k=k.to_s@discard.deletek@flashes[k] =vendalert()LinkConvenience accessor forflash[:alert].Source:show|on GitHub# File actionpack/lib/action_dispatch/middleware/flash.rb, line 280defalertself[:alert]endalert=(message)LinkConvenience accessor forflash[:alert]=.Source:show|on GitHub# File actionpack/lib/action_dispatch/middleware/flash.rb, line 285defalert=(message)self[:alert] =messageendclear()LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/middleware/flash.rb, line 204defclear@discard.clear@flashes.clearenddelete(key)LinkImmediately deletes the single flash entry. Use this method when you want remove the message within the current action. See alsodiscard.Source:show|on GitHub# File actionpack/lib/action_dispatch/middleware/flash.rb, line 189defdelete(key)key=key.to_s@discard.deletekey@flashes.deletekeyselfenddiscard(k = nil)LinkMarks the entire flash or a single flash entry to be discarded by the end of the current action:flash.discard              # discard the entire flash at the end of the current action
flash.discard(:warning)    # discard only the "warning" entry at the end of the current actionUse this method when you want to display the message in the current action but not in the next one. See alsodelete.Source:show|on GitHub# File actionpack/lib/action_dispatch/middleware/flash.rb, line 264defdiscard(k=nil)k=k.to_sifk@discard.mergeArray(k||keys)k?self[k]:selfendeach(&block)LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/middleware/flash.rb, line 209defeach(&block)@flashes.each(&block)endempty?()LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/middleware/flash.rb, line 200defempty?@flashes.empty?endinitialize_copy(other)LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/middleware/flash.rb, line 155definitialize_copy(other)ifother.now_is_loaded?@now=other.now.dup@now.flash=selfendsuperendkeep(k = nil)LinkKeeps either the entire current flash or a specific flash entry available for the next action:flash.keep            # keeps the entire flash
flash.keep(:notice)   # keeps only the "notice" entry, the rest of the flash is discardedSource:show|on GitHub# File actionpack/lib/action_dispatch/middleware/flash.rb, line 250defkeep(k=nil)k=k.to_sifk@discard.subtractArray(k||keys)k?self[k]:selfendkey?(name)LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/middleware/flash.rb, line 183defkey?(name)@flashes.key?name.to_sendkeys()LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/middleware/flash.rb, line 179defkeys@flashes.keysendnotice()LinkConvenience accessor forflash[:notice].Source:show|on GitHub# File actionpack/lib/action_dispatch/middleware/flash.rb, line 290defnoticeself[:notice]endnotice=(message)LinkConvenience accessor forflash[:notice]=.Source:show|on GitHub# File actionpack/lib/action_dispatch/middleware/flash.rb, line 295defnotice=(message)self[:notice] =messageendnow()LinkSets a flash that will not be available to the next action, only to the current.flash.now[:message] = "Hello current action"This method enables you to use the flash as a central messaging system in your app. When you need to pass an object to the next action, you use the standard flash assign ([]=). When you need to pass an object to the current action, you usenow, and your object will vanish when the current action is done.Entries set vianoware accessed the same way as standard entries:flash['my-key'].Also, brings two convenience accessors:flash.now.alert = "Beware now!"
# Equivalent to flash.now[:alert] = "Beware now!"

flash.now.notice = "Good luck now!"
# Equivalent to flash.now[:notice] = "Good luck now!"Source:show|on GitHub# File actionpack/lib/action_dispatch/middleware/flash.rb, line 241defnow@now||=FlashNow.new(self)endto_hash()LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/middleware/flash.rb, line 196defto_hash@flashes.dupendInstance Protected methodsnow_is_loaded?()LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/middleware/flash.rb, line 300defnow_is_loaded?@nowendInstance Private methodsstringify_array(array)LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/middleware/flash.rb, line 305defstringify_array(array)# :doc:array.mapdo|item|item.kind_of?(Symbol)?item.to_s:itemendend