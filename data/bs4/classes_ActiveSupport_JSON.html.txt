MethodsDdecode,dumpEencodeLloadPparse_errorConstantsDATETIME_REGEX=/\A(?:\d{4}-\d{2}-\d{2}|\d{4}-\d{1,2}-\d{1,2}[T \t]+\d{1,2}:\d{2}:\d{2}(\.[0-9]*)?(([ \t]*)Z|[-+]\d{2}?(:\d{2})?)?)\z/DATE_REGEX=/\A\d{4}-\d{2}-\d{2}\z/matches YAML-formatted datesClass Public methodsdecode(json)LinkParses aJSONstring (JavaScriptObjectNotation) into a hash. Seewww.json.orgfor more info.ActiveSupport::JSON.decode("{\"team\":\"rails\",\"players\":\"36\"}")
=> {"team" => "rails", "players" => "36"}Also aliased as:loadSource:show|on GitHub# File activesupport/lib/active_support/json/decoding.rb, line 22defdecode(json)data=::JSON.parse(json,quirks_mode:true)ifActiveSupport.parse_json_timesconvert_dates_from(data)elsedataendenddump(value, options = nil)LinkAlias for:encodeencode(value, options = nil)LinkAlso aliased as:dumpSource:show|on GitHub# File activesupport/lib/active_support/json/encoding.rb, line 22defencode(value,options=nil)Encoding.json_encoder.new(options).encode(value)endload(json)LinkAlias for:decodeparse_error()LinkReturns the class of the error that will be raised when there is an error in decodingJSON. Using this method means you wonât directly depend on the ActiveSupportâsJSONimplementation, in case it changes in the future.begin
  obj = ActiveSupport::JSON.decode(some_string)
rescue ActiveSupport::JSON.parse_error
  Rails.logger.warn("Attempted to decode invalid JSON: #{some_string}")
endSource:show|on GitHub# File activesupport/lib/active_support/json/decoding.rb, line 43defparse_error::JSON::ParserErrorend