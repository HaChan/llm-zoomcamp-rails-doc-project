Action View Log SubscriberProvides functionality so that Rails can output logs from Action View.MethodsAattach_toCcache_messageNnewRrender_collection,render_count,render_layout,render_partial,render_templateConstantsVIEWS_PATTERN=/^app\/views\//Class Public methodsattach_to(*)LinkSource:show|on GitHub# File actionview/lib/action_view/log_subscriber.rb, line 105defself.attach_to(*)ActiveSupport::Notifications.subscribe("render_template.action_view",ActionView::LogSubscriber::Start.new)ActiveSupport::Notifications.subscribe("render_layout.action_view",ActionView::LogSubscriber::Start.new)superendnew()LinkSource:show|on GitHub# File actionview/lib/action_view/log_subscriber.rb, line 12definitialize@root=nilsuperendInstance Public methodsrender_collection(event)LinkSource:show|on GitHub# File actionview/lib/action_view/log_subscriber.rb, line 45defrender_collection(event)identifier=event.payload[:identifier]||"templates"debugdomessage=+"  Rendered collection of #{from_rails_root(identifier)}"message<<" within #{from_rails_root(event.payload[:layout])}"ifevent.payload[:layout]message<<" #{render_count(event.payload)} (Duration: #{event.duration.round(1)}ms | GC: #{event.gc_time.round(1)}ms)"messageendendrender_layout(event)LinkSource:show|on GitHub# File actionview/lib/action_view/log_subscriber.rb, line 37defrender_layout(event)infodomessage=+"  Rendered layout #{from_rails_root(event.payload[:identifier])}"message<<" (Duration: #{event.duration.round(1)}ms | GC: #{event.gc_time.round(1)}ms)"endendrender_partial(event)LinkSource:show|on GitHub# File actionview/lib/action_view/log_subscriber.rb, line 26defrender_partial(event)debugdomessage=+"  Rendered #{from_rails_root(event.payload[:identifier])}"message<<" within #{from_rails_root(event.payload[:layout])}"ifevent.payload[:layout]message<<" (Duration: #{event.duration.round(1)}ms | GC: #{event.gc_time.round(1)}ms)"message<<" #{cache_message(event.payload)}"unlessevent.payload[:cache_hit].nil?messageendendrender_template(event)LinkSource:show|on GitHub# File actionview/lib/action_view/log_subscriber.rb, line 17defrender_template(event)infodomessage=+"  Rendered #{from_rails_root(event.payload[:identifier])}"message<<" within #{from_rails_root(event.payload[:layout])}"ifevent.payload[:layout]message<<" (Duration: #{event.duration.round(1)}ms | GC: #{event.gc_time.round(1)}ms)"endendInstance Private methodscache_message(payload)LinkSource:show|on GitHub# File actionview/lib/action_view/log_subscriber.rb, line 121defcache_message(payload)# :doc:casepayload[:cache_hit]when:hit"[cache hit]"when:miss"[cache miss]"endendrender_count(payload)LinkSource:show|on GitHub# File actionview/lib/action_view/log_subscriber.rb, line 113defrender_count(payload)# :doc:ifpayload[:cache_hits]"[#{payload[:cache_hits]} / #{payload[:count]} cache hits]"else"[#{payload[:count]} times]"endend