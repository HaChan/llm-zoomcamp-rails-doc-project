Action CableServerConfigurationAn instance of this configuration object is available viaActionCable.server.config, which allows you to tweak Action Cable configuration in aRailsconfig initializer.MethodsNnewPpubsub_adapterAttributes[RW]allow_same_origin_as_host[RW]allowed_request_origins[RW]cable[RW]connection_class[RW]disable_request_forgery_protection[RW]filter_parameters[RW]health_check_application[RW]health_check_path[RW]log_tags[RW]logger[RW]mount_path[RW]precompile_assets[RW]url[RW]worker_pool_sizeClass Public methodsnew()LinkSource:show|on GitHub# File actioncable/lib/action_cable/server/configuration.rb, line 22definitialize@log_tags= []@connection_class=->{ActionCable::Connection::Base}@worker_pool_size=4@disable_request_forgery_protection=false@allow_same_origin_as_host=true@filter_parameters= []@health_check_application=->(env) {
    [200, {Rack::CONTENT_TYPE=>"text/html","date"=>Time.now.httpdate}, []]
  }endInstance Public methodspubsub_adapter()LinkReturns constant of subscription adapter specified in config/cable.yml. If the adapter cannot be found, this will default to the Redis adapter. Also makes sure proper dependencies are required.Source:show|on GitHub# File actioncable/lib/action_cable/server/configuration.rb, line 40defpubsub_adapteradapter= (cable.fetch("adapter") {"redis"})# Require the adapter itself and give useful feedback about#     1. Missing adapter gems and#     2. Adapter gems' missing dependencies.path_to_adapter="action_cable/subscription_adapter/#{adapter}"beginrequirepath_to_adapterrescueLoadError=>e# We couldn't require the adapter itself. Raise an exception that points out# config typos and missing gems.ife.path==path_to_adapter# We can assume that a non-builtin adapter was specified, so it's either# misspelled or missing from Gemfile.raisee.class,"Could not load the '#{adapter}' Action Cable pubsub adapter. Ensure that the adapter is spelled correctly in config/cable.yml and that you've added the necessary adapter gem to your Gemfile.",e.backtrace# Bubbled up from the adapter require. Prefix the exception message with some# guidance about how to address it and reraise.elseraisee.class,"Error loading the '#{adapter}' Action Cable pubsub adapter. Missing a gem it depends on? #{e.message}",e.backtraceendendadapter=adapter.camelizeadapter="PostgreSQL"ifadapter=="Postgresql""ActionCable::SubscriptionAdapter::#{adapter}".constantizeend