Action ControllerMetalActionController::Metalis the simplest possible controller, providing a valid Rack interface without the additional niceties provided byActionController::Base.A sample metal controller might look like this:class HelloController < ActionController::Metal
  def index
    self.response_body = "Hello World!"
  end
endAnd then to route requests to your metal controller, you would add something like this toconfig/routes.rb:get 'hello', to: HelloController.action(:index)The::actionmethod returns a valid Rack application for theRailsrouter to dispatch to.RenderingHelpersBy default,ActionController::Metalprovides no utilities for rendering views, partials, or other responses aside from some low-level setters such asresponse_body=,content_type=, andstatus=. To add the render helpers youâre used to having in a normal controller, you can do the following:class HelloController < ActionController::Metal
  include AbstractController::Rendering
  include ActionView::Layouts
  append_view_path "#{Rails.root}/app/views"

  def index
    render "hello/index"
  end
endRedirectionHelpersTo add redirection helpers to your metal controller, do the following:class HelloController < ActionController::Metal
  include ActionController::Redirecting
  include Rails.application.routes.url_helpers

  def index
    redirect_to root_url
  end
endOtherHelpersYou can refer to the modules included inActionController::Baseto see other features you can bring into your metal controller.MethodsAactionCcontent_type,content_type=,controller_name,controller_nameDdispatchHheadersLlocation,location=Mmake_response!,media_type,middlewareNnewPparams,params=,performed?Rreset_session,response=,response_body=Ssession,status,status=Uurl_for,useAttributes[R]requestTheActionDispatch::Requestinstance for the current request.[R]responseTheActionDispatch::Responseinstance for the current response.Class Public methodsaction(name)LinkReturns a Rack endpoint for the given action name.Source:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 315defself.action(name)app=lambda{|env|req=ActionDispatch::Request.new(env)res=make_response!reqnew.dispatch(name,req,res)
  }ifmiddleware_stack.any?middleware_stack.build(name,app)elseappendendcontroller_name()LinkReturns the last part of the controllerâs name, underscored, without the endingController. For instance,PostsControllerreturnsposts. Namespaces are left out, soAdmin::PostsControllerreturnspostsas well.ReturnsstringSource:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 130defself.controller_name@controller_name||=(name.demodulize.delete_suffix("Controller").underscoreunlessanonymous?)enddispatch(name, req, res)LinkDirect dispatch to the controller. Instantiates the controller, then executes the action namedname.Source:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 331defself.dispatch(name,req,res)ifmiddleware_stack.any?middleware_stack.build(name) {|env|new.dispatch(name,req,res) }.callreq.envelsenew.dispatch(name,req,res)endendmake_response!(request)LinkSource:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 134defself.make_response!(request)ActionDispatch::Response.new.tapdo|res|res.request=requestendendmiddleware()LinkThe middleware stack used by this controller.By default uses a variation ofActionDispatch::MiddlewareStackwhich allows for the following syntax:class PostsController < ApplicationController
  use AuthenticationMiddleware, except: [:index, :show]
endRead more about [Rails middleware stack] (guides.rubyonrails.org/rails_on_rack.html#action-dispatcher-middleware-stack) in the guides.Source:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 310defself.middlewaremiddleware_stackendnew()LinkSource:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 210definitialize@_request=nil@_response=nil@_response_body=nil@_routes=nil@_params=nilsuperenduse(...)LinkPushes the given Rack middleware and its arguments to the bottom of the middleware stack.Source:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 293defuse(...)middleware_stack.use(...)endInstance Public methodscontent_typeLinkDelegates toActionDispatch::Response#content_typeSource:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 204delegate:content_type,to:"@_response"content_type=LinkDelegates toActionDispatch::Response#content_type=Source:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 192delegate:content_type=,to:"@_response"controller_name()LinkDelegates to the classâs::controller_name.Source:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 156defcontroller_nameself.class.controller_nameendheadersLinkDelegates toActionDispatch::Response#headers.Source:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 180delegate:headers,to:"@_response"locationLinkDelegates toActionDispatch::Response#locationSource:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 200delegate:location,to:"@_response"location=LinkDelegates toActionDispatch::Response#location=Source:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 188delegate:location=,to:"@_response"media_typeLinkDelegates toActionDispatch::Response#media_typeSource:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 208delegate:media_type,to:"@_response"params()LinkSource:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 219defparams@_params||=request.parametersendparams=(val)LinkSource:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 223defparams=(val)@_params=valendperformed?()LinkTests if render or redirect has already happened.Source:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 245defperformed?response_body||response.committed?endreset_session()LinkSource:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 284defreset_session@_request.reset_sessionendresponse=(response)LinkAssign the response and mark it as committed. No further processing will occur.Source:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 268defresponse=(response)set_response!(response)# Force `performed?` to return true:@_response_body=trueendresponse_body=(body)LinkSource:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 234defresponse_body=(body)ifbodybody= [body]ifbody.is_a?(String)response.body=bodysuperelseresponse.reset_body!endendsessionLinkThe ActionDispatch::Request::Session instance for the current request. See further details in theActive Controller Session guide.Source:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 176delegate:session,to:"@_request"statusLinkDelegates toActionDispatch::Response#statusSource:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 196delegate:status,to:"@_response"status=LinkDelegates toActionDispatch::Response#status=Source:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 184delegate:status=,to:"@_response"url_for(string)LinkBasicurl_forthat can be overridden for more robust functionality.Source:show|on GitHub# File actionpack/lib/action_controller/metal.rb, line 230defurl_for(string)stringend