Classthat will build the hash while the XML document is being parsed using SAX events.MethodsCcdata_block,characters,current_hashEend_document,end_element,errorSstart_document,start_elementConstantsCONTENT_KEY="__content__"HASH_SIZE_KEY="__hash_size__"Attributes[R]hashInstance Public methodscdata_block(string)LinkAlias for:characterscharacters(string)LinkAlso aliased as:cdata_blockSource:show|on GitHub# File activesupport/lib/active_support/xml_mini/nokogirisax.rb, line 61defcharacters(string)current_hash[CONTENT_KEY]<<stringendcurrent_hash()LinkSource:show|on GitHub# File activesupport/lib/active_support/xml_mini/nokogirisax.rb, line 24defcurrent_hash@hash_stack.lastendend_document()LinkSource:show|on GitHub# File activesupport/lib/active_support/xml_mini/nokogirisax.rb, line 33defend_documentraise"Parse stack not empty!"if@hash_stack.size>1endend_element(name)LinkSource:show|on GitHub# File activesupport/lib/active_support/xml_mini/nokogirisax.rb, line 54defend_element(name)ifcurrent_hash.length>current_hash.delete(HASH_SIZE_KEY)&&current_hash[CONTENT_KEY].blank?||current_hash[CONTENT_KEY]==""current_hash.delete(CONTENT_KEY)end@hash_stack.popenderror(error_message)LinkSource:show|on GitHub# File activesupport/lib/active_support/xml_mini/nokogirisax.rb, line 37deferror(error_message)raiseerror_messageendstart_document()LinkSource:show|on GitHub# File activesupport/lib/active_support/xml_mini/nokogirisax.rb, line 28defstart_document@hash= {}@hash_stack= [@hash]endstart_element(name, attrs = [])LinkSource:show|on GitHub# File activesupport/lib/active_support/xml_mini/nokogirisax.rb, line 41defstart_element(name,attrs= [])new_hash= {CONTENT_KEY=>+""}.merge!(Hash[attrs])new_hash[HASH_SIZE_KEY] =new_hash.size+1casecurrent_hash[name]whenArraythencurrent_hash[name]<<new_hashwhenHashthencurrent_hash[name] = [current_hash[name],new_hash]whennilthencurrent_hash[name] =new_hashend@hash_stack.push(new_hash)end