Active Record Signed IdNamespaceMODULEActiveRecord::SignedId::ClassMethodsMethodsSsigned_id,signed_id_verifier_secretClass Public methodssigned_id_verifier_secretLinkSet the secret used for the signed id verifier instance when using Active Record outside of Rails. Within Rails, this is automatically set using the Rails application key generator.Source:show|on GitHub# File activerecord/lib/active_record/signed_id.rb, line 13class_attribute:signed_id_verifier_secret,instance_writer:falseInstance Public methodssigned_id(expires_in: nil, expires_at: nil, purpose: nil)LinkReturns a signed id thatâs generated using a preconfiguredActiveSupport::MessageVerifierinstance.This signed id is tamper proof, so itâs safe to send in an email or otherwise share with the outside world. However, as with any message signed with aActiveSupport::MessageVerifier,the signed id is not encrypted. Itâs just encoded and protected against tampering.This means that the ID can be decoded by anyone; however, if tampered with (so to point to a different ID), the cryptographic signature will no longer match, and the signed id will be considered invalid and return nil when passed tofind_signed(or raise withfind_signed!).It can furthermore be set to expire (the default is not to expire), and scoped down with a specific purpose. If the expiration date has been exceeded beforefind_signedis called, the id wonât find the designated record. If a purpose is set, this too must match.If you accidentally let a signed id out in the wild that you wish to retract sooner than its expiration date (or maybe you forgot to set an expiration date while meaning to!), you can use the purpose to essentially version thesigned_id, like so:user.signed_id purpose: :v2And you then change yourfind_signedcalls to require this new purpose. Any old signed ids that were not created with the purpose will no longer find the record.Source:show|on GitHub# File activerecord/lib/active_record/signed_id.rb, line 131defsigned_id(expires_in:nil,expires_at:nil,purpose:nil)raiseArgumentError,"Cannot get a signed_id for a new record"ifnew_record?self.class.signed_id_verifier.generateid,expires_in:expires_in,expires_at:expires_at,purpose:self.class.combine_signed_id_purposes(purpose)end