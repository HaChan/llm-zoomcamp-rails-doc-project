Action DispatchDebugExceptionsThis middleware is responsible for logging exceptions and showing a debugging page in case the request is local.MethodsCcallNnewRregister_interceptorClass Public methodsnew(app, routes_app = nil, response_format = :default, interceptors = self.class.interceptors)LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/middleware/debug_exceptions.rb, line 23definitialize(app,routes_app=nil,response_format=:default,interceptors=self.class.interceptors)@app=app@routes_app=routes_app@response_format=response_format@interceptors=interceptorsendregister_interceptor(object = nil, &block)LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/middleware/debug_exceptions.rb, line 18defself.register_interceptor(object=nil,&block)interceptor=object||blockinterceptors<<interceptorendInstance Public methodscall(env)LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/middleware/debug_exceptions.rb, line 30defcall(env)_,headers,body=response=@app.call(env)ifheaders[Constants::X_CASCADE]=="pass"body.closeifbody.respond_to?(:close)raiseActionController::RoutingError,"No route matches [#{env['REQUEST_METHOD']}] #{env['PATH_INFO'].inspect}"endresponserescueException=>exceptionrequest=ActionDispatch::Request.newenvbacktrace_cleaner=request.get_header("action_dispatch.backtrace_cleaner")wrapper=ExceptionWrapper.new(backtrace_cleaner,exception)invoke_interceptors(request,exception,wrapper)raiseexceptionunlesswrapper.show?(request)render_exception(request,exception,wrapper)end