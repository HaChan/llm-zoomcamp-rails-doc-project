MethodsBbuild_recordDdecodeNnewRresolve_cached_associationsClass Public methodsnew(entries)LinkSource:show|on GitHub# File activerecord/lib/active_record/message_pack.rb, line 91definitialize(entries)@records=entries.map{|entry|build_record(entry) }@records.zip(entries) {|record,entry|resolve_cached_associations(record,entry) }endInstance Public methodsbuild_record(entry)LinkSource:show|on GitHub# File activerecord/lib/active_record/message_pack.rb, line 104defbuild_record(entry)class_name,attributes_hash,is_new_record,*=entryklass=ActiveSupport::MessagePack::Extensions.load_class(class_name)attributes=klass.attributes_builder.build_from_database(attributes_hash)klass.allocate.init_with_attributes(attributes,is_new_record)enddecode(ref)LinkSource:show|on GitHub# File activerecord/lib/active_record/message_pack.rb, line 96defdecode(ref)ifref.is_a?(Array)ref.map{|r|@records[r] }elsifref@records[ref]endendresolve_cached_associations(record, entry)LinkSource:show|on GitHub# File activerecord/lib/active_record/message_pack.rb, line 111defresolve_cached_associations(record,entry)i=3# entry == [class_name, attributes_hash, is_new_record, *associations]whilei<entry.lengthbeginrecord.association(entry[i]).target=decode(entry[i+1])rescueActiveRecord::AssociationNotFoundError# The association no longer exists, so just skip it.endi+=2endend