NamespaceMODULEActionController::HttpAuthentication::Basic::ControllerMethods::ClassMethodsMethodsAauthenticate_or_request_with_http_basic,authenticate_with_http_basicHhttp_basic_authenticate_or_request_withRrequest_http_basic_authenticationInstance Public methodsauthenticate_or_request_with_http_basic(realm = nil, message = nil, &login_procedure)LinkSource:show|on GitHub# File actionpack/lib/action_controller/metal/http_authentication.rb, line 95defauthenticate_or_request_with_http_basic(realm=nil,message=nil,&login_procedure)authenticate_with_http_basic(&login_procedure)||request_http_basic_authentication(realm||"Application",message)endauthenticate_with_http_basic(&login_procedure)LinkSource:show|on GitHub# File actionpack/lib/action_controller/metal/http_authentication.rb, line 99defauthenticate_with_http_basic(&login_procedure)HttpAuthentication::Basic.authenticate(request,&login_procedure)endhttp_basic_authenticate_or_request_with(name:, password:, realm: nil, message: nil)LinkSource:show|on GitHub# File actionpack/lib/action_controller/metal/http_authentication.rb, line 86defhttp_basic_authenticate_or_request_with(name:,password:,realm:nil,message:nil)authenticate_or_request_with_http_basic(realm,message)do|given_name,given_password|# This comparison uses & so that it doesn't short circuit and uses# `secure_compare` so that length information isn't leaked.ActiveSupport::SecurityUtils.secure_compare(given_name.to_s,name)&ActiveSupport::SecurityUtils.secure_compare(given_password.to_s,password)endendrequest_http_basic_authentication(realm = "Application", message = nil)LinkSource:show|on GitHub# File actionpack/lib/action_controller/metal/http_authentication.rb, line 103defrequest_http_basic_authentication(realm="Application",message=nil)HttpAuthentication::Basic.authentication_request(self,realm,message)end