Active Record DatabaseHashConfigAHashConfigobject is created for each database configuration entry that is created from a hash.A hash config:{ "development" => { "database" => "db_name" } }Becomes:#<ActiveRecord::DatabaseConfigurations::HashConfig:0x00007fd1acbded10
  @env_name="development", @name="primary", @config={database: "db_name"}>SeeActiveRecord::DatabaseConfigurationsfor more info.MethodsAadapterCcheckout_timeoutDdatabase,default_schema_cache_pathHhostIidle_timeoutLlazy_schema_cache_pathMmax_queue,max_threads,migrations_paths,min_threadsNnewPpoolQquery_cacheRreaping_frequency,replica?Sschema_cache_path,schema_dumpAttributes[R]configuration_hashClass Public methodsnew(env_name, name, configuration_hash)LinkInitialize a newHashConfigobjectParametersenv_name- TheRailsenvironment, i.e. âdevelopmentâ.name- The db config name. In a standard two-tier database configuration this will default to âprimaryâ. In a multiple database three-tier database configuration this corresponds to the name used in the second tier, for example âprimary_readonlyâ.configuration_hash- The config hash. This is the hash that contains the database adapter, name, and other important information for database connections.Source:show|on GitHub# File activerecord/lib/active_record/database_configurations/hash_config.rb, line 38definitialize(env_name,name,configuration_hash)super(env_name,name)@configuration_hash=configuration_hash.symbolize_keys.freezeendInstance Public methodsadapter()LinkSource:show|on GitHub# File activerecord/lib/active_record/database_configurations/hash_config.rb, line 107defadapterconfiguration_hash[:adapter]&.to_sendcheckout_timeout()LinkSource:show|on GitHub# File activerecord/lib/active_record/database_configurations/hash_config.rb, line 92defcheckout_timeout(configuration_hash[:checkout_timeout]||5).to_fenddatabase()LinkSource:show|on GitHub# File activerecord/lib/active_record/database_configurations/hash_config.rb, line 64defdatabaseconfiguration_hash[:database]enddefault_schema_cache_path(db_dir = "db")LinkSource:show|on GitHub# File activerecord/lib/active_record/database_configurations/hash_config.rb, line 117defdefault_schema_cache_path(db_dir="db")ifprimary?File.join(db_dir,"schema_cache.yml")elseFile.join(db_dir,"#{name}_schema_cache.yml")endendhost()LinkSource:show|on GitHub# File activerecord/lib/active_record/database_configurations/hash_config.rb, line 56defhostconfiguration_hash[:host]endidle_timeout()LinkSource:show|on GitHub# File activerecord/lib/active_record/database_configurations/hash_config.rb, line 102defidle_timeouttimeout=configuration_hash.fetch(:idle_timeout,300).to_ftimeoutiftimeout>0endlazy_schema_cache_path()LinkSource:show|on GitHub# File activerecord/lib/active_record/database_configurations/hash_config.rb, line 125deflazy_schema_cache_pathschema_cache_path||default_schema_cache_pathendmax_queue()LinkSource:show|on GitHub# File activerecord/lib/active_record/database_configurations/hash_config.rb, line 88defmax_queuemax_threads*4endmax_threads()LinkSource:show|on GitHub# File activerecord/lib/active_record/database_configurations/hash_config.rb, line 80defmax_threads(configuration_hash[:max_threads]||pool).to_iendmigrations_paths()LinkThe migrations paths for a database configuration. If themigrations_pathskey is present in the config,migrations_pathswill return its value.Source:show|on GitHub# File activerecord/lib/active_record/database_configurations/hash_config.rb, line 52defmigrations_pathsconfiguration_hash[:migrations_paths]endmin_threads()LinkSource:show|on GitHub# File activerecord/lib/active_record/database_configurations/hash_config.rb, line 76defmin_threads(configuration_hash[:min_threads]||0).to_iendpool()LinkSource:show|on GitHub# File activerecord/lib/active_record/database_configurations/hash_config.rb, line 72defpool(configuration_hash[:pool]||5).to_iendquery_cache()LinkSource:show|on GitHub# File activerecord/lib/active_record/database_configurations/hash_config.rb, line 84defquery_cacheconfiguration_hash[:query_cache]endreaping_frequency()Linkreaping_frequencyis configurable mostly for historical reasons, but it could also be useful if someone wants a very lowidle_timeout.Source:show|on GitHub# File activerecord/lib/active_record/database_configurations/hash_config.rb, line 98defreaping_frequencyconfiguration_hash.fetch(:reaping_frequency,60)&.to_fendreplica?()LinkDetermines whether a database configuration is for a replica / readonly connection. If thereplicakey is present in the config,replica?will returntrue.Source:show|on GitHub# File activerecord/lib/active_record/database_configurations/hash_config.rb, line 46defreplica?configuration_hash[:replica]endschema_cache_path()LinkThe path to the schema cache dump file for a database. If omitted, the filename will be read from ENV or a default will be derived.Source:show|on GitHub# File activerecord/lib/active_record/database_configurations/hash_config.rb, line 113defschema_cache_pathconfiguration_hash[:schema_cache_path]endschema_dump(format = ActiveRecord.schema_format)LinkDetermines whether to dump the schema/structure files and the filename that should be used.Ifconfiguration_hash[:schema_dump]is set tofalseornilthe schema will not be dumped.If the config option is set that will be used. OtherwiseRailswill generate the filename from the database config name.Source:show|on GitHub# File activerecord/lib/active_record/database_configurations/hash_config.rb, line 141defschema_dump(format=ActiveRecord.schema_format)ifconfiguration_hash.key?(:schema_dump)ifconfig=configuration_hash[:schema_dump]configendelsifprimary?schema_file_type(format)else"#{name}_#{schema_file_type(format)}"endend