File Update CheckerFileUpdateCheckerspecifies the API used by Rails to watch files and control reloading. The API depends on four methods:initializewhich expects two parameters and one block as described below.updated?which returns a boolean if there were updates in the filesystem or not.executewhich executes the given block on initialization and updates the latest watched files and timestamp.execute_if_updatedwhich just executes the block if it was updated.After initialization, a call toexecute_if_updatedmust execute the block only if there was really a change in the filesystem.This class is used by Rails to reload the I18n framework whenever they are changed upon a new request.i18n_reloader = ActiveSupport::FileUpdateChecker.new(paths) do
  I18n.reload!
end

ActiveSupport::Reloader.to_prepare do
  i18n_reloader.execute_if_updated
endMethodsEexecute,execute_if_updatedNnewUupdated?Class Public methodsnew(files, dirs = {}, &block)LinkIt accepts two parameters on initialization. The first is an array of files and the second is an optional hash of directories. The hash must have directories as keys and the value is an array of extensions to be watched under that directory.This method must also receive a block that will be called once a path changes. The array of files and list of directories cannot be changed afterFileUpdateCheckerhas been initialized.Source:show|on GitHub# File activesupport/lib/active_support/file_update_checker.rb, line 44definitialize(files,dirs= {},&block)unlessblockraiseArgumentError,"A block is required to initialize a FileUpdateChecker"end@files=files.freeze@glob=compile_glob(dirs)@block=block@watched=nil@updated_at=nil@last_watched=watched@last_update_at=updated_at(@last_watched)endInstance Public methodsexecute()LinkExecutes the given block and updates the latest watched files and timestamp.Source:show|on GitHub# File activesupport/lib/active_support/file_update_checker.rb, line 82defexecute@last_watched=watched@last_update_at=updated_at(@last_watched)@block.callensure@watched=nil@updated_at=nilendexecute_if_updated()LinkExecute the block given if updated.Source:show|on GitHub# File activesupport/lib/active_support/file_update_checker.rb, line 92defexecute_if_updatedifupdated?yieldifblock_given?executetrueelsefalseendendupdated?()LinkCheck if any of the entries were updated. If so, the watched and/or updated_at values are cached until the block is executed viaexecuteorexecute_if_updated.Source:show|on GitHub# File activesupport/lib/active_support/file_update_checker.rb, line 63defupdated?current_watched=watchedif@last_watched.size!=current_watched.size@watched=current_watchedtrueelsecurrent_updated_at=updated_at(current_watched)if@last_update_at<current_updated_at@watched=current_watched@updated_at=current_updated_attrueelsefalseendendend