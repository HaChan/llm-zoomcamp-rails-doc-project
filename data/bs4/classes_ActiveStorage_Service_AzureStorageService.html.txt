Active Storage Azure Storage ServiceWraps the Microsoft Azure StorageBlobServiceas an Active Storage service. SeeActiveStorage::Servicefor the generic API documentation that applies to all services.MethodsCcomposeDdelete,delete_prefixed,download,download_chunkEexist?Hheaders_for_direct_uploadNnewUupload,url_for_direct_uploadAttributes[R]client[R]container[R]signerClass Public methodsnew(storage_account_name:, storage_access_key:, container:, public: false, **options)LinkSource:show|on GitHub# File activestorage/lib/active_storage/service/azure_storage_service.rb, line 17definitialize(storage_account_name:,storage_access_key:,container:,public:false,**options)@client=Azure::Storage::Blob::BlobService.create(storage_account_name:storage_account_name,storage_access_key:storage_access_key,**options)@signer=Azure::Storage::Common::Core::Auth::SharedAccessSignature.new(storage_account_name,storage_access_key)@container=container@public=publicendInstance Public methodscompose(source_keys, destination_key, filename: nil, content_type: nil, disposition: nil, custom_metadata: {})LinkSource:show|on GitHub# File activestorage/lib/active_storage/service/azure_storage_service.rb, line 112defcompose(source_keys,destination_key,filename:nil,content_type:nil,disposition:nil,custom_metadata:{})content_disposition=content_disposition_with(type:disposition,filename:filename)ifdisposition&&filenameclient.create_append_blob(container,destination_key,content_type:content_type,content_disposition:content_disposition,metadata:custom_metadata,
  ).tapdo|blob|source_keys.eachdo|source_key|stream(source_key)do|chunk|client.append_blob_block(container,blob.name,chunk)endendendenddelete(key)LinkSource:show|on GitHub# File activestorage/lib/active_storage/service/azure_storage_service.rb, line 58defdelete(key)instrument:delete,key:keydoclient.delete_blob(container,key)rescueAzure::Core::Http::HTTPError=>eraiseunlesse.type=="BlobNotFound"# Ignore files already deletedendenddelete_prefixed(prefix)LinkSource:show|on GitHub# File activestorage/lib/active_storage/service/azure_storage_service.rb, line 67defdelete_prefixed(prefix)instrument:delete_prefixed,prefix:prefixdomarker=nilloopdoresults=client.list_blobs(container,prefix:prefix,marker:marker)results.eachdo|blob|client.delete_blob(container,blob.name)endbreakunlessmarker=results.continuation_token.presenceendendenddownload(key, &block)LinkSource:show|on GitHub# File activestorage/lib/active_storage/service/azure_storage_service.rb, line 34defdownload(key,&block)ifblock_given?instrument:streaming_download,key:keydostream(key,&block)endelseinstrument:download,key:keydohandle_errorsdo_,io=client.get_blob(container,key)io.force_encoding(Encoding::BINARY)endendendenddownload_chunk(key, range)LinkSource:show|on GitHub# File activestorage/lib/active_storage/service/azure_storage_service.rb, line 49defdownload_chunk(key,range)instrument:download_chunk,key:key,range:rangedohandle_errorsdo_,io=client.get_blob(container,key,start_range:range.begin,end_range:range.exclude_end??range.end-1:range.end)io.force_encoding(Encoding::BINARY)endendendexist?(key)LinkSource:show|on GitHub# File activestorage/lib/active_storage/service/azure_storage_service.rb, line 83defexist?(key)instrument:exist,key:keydo|payload|answer=blob_for(key).present?payload[:exist] =answeranswerendendheaders_for_direct_upload(key, content_type:, checksum:, filename: nil, disposition: nil, custom_metadata: {}, **)LinkSource:show|on GitHub# File activestorage/lib/active_storage/service/azure_storage_service.rb, line 106defheaders_for_direct_upload(key,content_type:,checksum:,filename:nil,disposition:nil,custom_metadata:{},**)content_disposition=content_disposition_with(type:disposition,filename:filename)iffilename{"Content-Type"=>content_type,"Content-MD5"=>checksum,"x-ms-blob-content-disposition"=>content_disposition,"x-ms-blob-type"=>"BlockBlob",**custom_metadata_headers(custom_metadata) }endupload(key, io, checksum: nil, filename: nil, content_type: nil, disposition: nil, custom_metadata: {}, **)LinkSource:show|on GitHub# File activestorage/lib/active_storage/service/azure_storage_service.rb, line 24defupload(key,io,checksum:nil,filename:nil,content_type:nil,disposition:nil,custom_metadata:{},**)instrument:upload,key:key,checksum:checksumdohandle_errorsdocontent_disposition=content_disposition_with(filename:filename,type:disposition)ifdisposition&&filenameclient.create_block_blob(container,key,IO.try_convert(io)||io,content_md5:checksum,content_type:content_type,content_disposition:content_disposition,metadata:custom_metadata)endendendurl_for_direct_upload(key, expires_in:, content_type:, content_length:, checksum:, custom_metadata: {})LinkSource:show|on GitHub# File activestorage/lib/active_storage/service/azure_storage_service.rb, line 91defurl_for_direct_upload(key,expires_in:,content_type:,content_length:,checksum:,custom_metadata:{})instrument:url,key:keydo|payload|generated_url=signer.signed_uri(uri_for(key),false,service:"b",permissions:"rw",expiry:format_expiry(expires_in)
    ).to_spayload[:url] =generated_urlgenerated_urlendend