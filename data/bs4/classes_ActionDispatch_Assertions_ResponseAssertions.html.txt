A small suite of assertions that test responses fromRailsapplications.MethodsAassert_redirected_to,assert_responseInstance Public methodsassert_redirected_to(url_options = {}, options = {}, message = nil)LinkAsserts that the response is a redirect to a URL matching the given options.# Asserts that the redirection was to the "index" action on the WeblogController
assert_redirected_to controller: "weblog", action: "index"

# Asserts that the redirection was to the named route login_url
assert_redirected_to login_url

# Asserts that the redirection was to the URL for @customer
assert_redirected_to @customer

# Asserts that the redirection matches the regular expression
assert_redirected_to %r(\Ahttp://example.org)

# Asserts that the redirection has the HTTP status code 301 (Moved
# Permanently).
assert_redirected_to "/some/path", status: :moved_permanentlySource:show|on GitHub# File actionpack/lib/action_dispatch/testing/assertions/response.rb, line 60defassert_redirected_to(url_options= {},options= {},message=nil)options,message= {},optionsunlessoptions.is_a?(Hash)status=options[:status]||:redirectassert_response(status,message)returntrueifurl_options===@response.locationredirect_is=normalize_argument_to_redirection(@response.location)redirect_expected=normalize_argument_to_redirection(url_options)message||="Expected response to be a redirect to <#{redirect_expected}> but was a redirect to <#{redirect_is}>"assert_operatorredirect_expected,:===,redirect_is,messageendassert_response(type, message = nil)LinkAsserts that the response is one of the following types::success- Status code was in the 200-299 range:redirect- Status code was in the 300-399 range:missing- Status code was 404:error- Status code was in the 500-599 rangeYou can also pass an explicit status number likeassert_response(501)or its symbolic equivalentassert_response(:not_implemented). SeeRack::Utils::SYMBOL_TO_STATUS_CODEfor a full list.# Asserts that the response was a redirection
assert_response :redirect

# Asserts that the response code was status code 401 (unauthorized)
assert_response 401Source:show|on GitHub# File actionpack/lib/action_dispatch/testing/assertions/response.rb, line 33defassert_response(type,message=nil)message||=generate_response_message(type)ifRESPONSE_PREDICATES.key?(type)assert@response.public_send(RESPONSE_PREDICATES[type]),messageelseassert_equalAssertionResponse.new(type).code,@response.response_code,messageendend