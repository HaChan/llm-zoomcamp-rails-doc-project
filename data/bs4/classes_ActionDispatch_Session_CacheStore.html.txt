Action DispatchSessionCacheStoreA session store that uses anActiveSupport::Cache::Storeto store the sessions. This store is most useful if you donât store critical data in your sessions and you donât need them to live for extended periods of time.Optionscache- The cache to use. If it is not specified,Rails.cachewill be used.expire_after- The length of time a session will be stored before automatically expiring. By default, the:expires_inoption of the cache is used.MethodsDdelete_sessionFfind_sessionNnewWwrite_sessionClass Public methodsnew(app, options = {})LinkSource:show|on GitHub# File actionpack/lib/action_dispatch/middleware/session/cache_store.rb, line 23definitialize(app,options= {})@cache=options[:cache]||Rails.cacheoptions[:expire_after]||=@cache.options[:expires_in]superendInstance Public methodsdelete_session(env, sid, options)LinkRemove a session from the cache.Source:show|on GitHub# File actionpack/lib/action_dispatch/middleware/session/cache_store.rb, line 49defdelete_session(env,sid,options)@cache.delete(cache_key(sid.private_id))@cache.delete(cache_key(sid.public_id))generate_sidendfind_session(env, sid)LinkGet a session from the cache.Source:show|on GitHub# File actionpack/lib/action_dispatch/middleware/session/cache_store.rb, line 30deffind_session(env,sid)unlesssid&&(session=get_session_with_fallback(sid))sid,session=generate_sid, {}end[sid,session]endwrite_session(env, sid, session, options)LinkSet a session in the cache.Source:show|on GitHub# File actionpack/lib/action_dispatch/middleware/session/cache_store.rb, line 38defwrite_session(env,sid,session,options)key=cache_key(sid.private_id)ifsession@cache.write(key,session,expires_in:options[:expire_after])else@cache.delete(key)endsidend