ActiveModelis a class to be implemented by each ORM to allow Rails to generate customized controller code.TheAPIhas the same methods asActiveRecord, but each method returns a string that matches the ORMAPI.For example:ActiveRecord::Generators::ActiveModel.find(Foo, "params[:id]")
# => "Foo.find(params[:id])"

DataMapper::Generators::ActiveModel.find(Foo, "params[:id]")
# => "Foo.get(params[:id])"On initialization, theActiveModelaccepts the instance name that will receive the calls:builder = ActiveRecord::Generators::ActiveModel.new "@foo"
builder.save # => "@foo.save"The only exception inActiveModelforActiveRecordis the use of self.build instead of self.new.MethodsAallBbuildDdestroyEerrorsFfindNnewSsaveUupdateAttributes[R]nameClass Public methodsall(klass)LinkUsed for:GETindexSource:show|on GitHub# File railties/lib/rails/generators/active_model.rb, line 38defself.all(klass)"#{klass}.all"endbuild(klass, params = nil)LinkUsed for:GETnewPOSTcreateSource:show|on GitHub# File railties/lib/rails/generators/active_model.rb, line 56defself.build(klass,params=nil)ifparams"#{klass}.new(#{params})"else"#{klass}.new"endendfind(klass, params = nil)LinkUsed for:GETshowGETeditPATCH / PUTupdateDELETEdestroySource:show|on GitHub# File railties/lib/rails/generators/active_model.rb, line 48defself.find(klass,params=nil)"#{klass}.find(#{params})"endnew(name)LinkSource:show|on GitHub# File railties/lib/rails/generators/active_model.rb, line 31definitialize(name)@name=nameendInstance Public methodsdestroy()LinkUsed for:DELETEdestroySource:show|on GitHub# File railties/lib/rails/generators/active_model.rb, line 89defdestroy"#{name}.destroy!"enderrors()LinkUsed for:POSTcreatePATCH / PUTupdateSource:show|on GitHub# File railties/lib/rails/generators/active_model.rb, line 82deferrors"#{name}.errors"endsave()LinkUsed for:POSTcreateSource:show|on GitHub# File railties/lib/rails/generators/active_model.rb, line 67defsave"#{name}.save"endupdate(params = nil)LinkUsed for:PATCH / PUTupdateSource:show|on GitHub# File railties/lib/rails/generators/active_model.rb, line 74defupdate(params=nil)"#{name}.update(#{params})"end