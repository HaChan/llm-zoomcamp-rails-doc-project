NamespaceMODULEActionController::Renderers::AllMODULEActionController::Renderers::ClassMethodsMethods#_render_to_body_with_renderer,_render_with_renderer_method_nameAaddRremove,render_to_bodyConstantsRENDERERS=Set.newA Set containing renderer names that correspond to available renderer procs. Default values are:json,:js,:xml.Class Public methods_render_with_renderer_method_name(key)LinkSource:show|on GitHub# File actionpack/lib/action_controller/metal/renderers.rb, line 91defself._render_with_renderer_method_name(key)"_render_with_renderer_#{key}"endadd(key, &block)LinkAdds a new renderer to call within controller actions. A renderer is invoked by passing its name as an option toAbstractController::Rendering#render. To create a renderer pass it a name and a block. The block takes two arguments, the first is the value paired with its key and the second is the remaining hash of options passed torender.Create a csv renderer:ActionController::Renderers.add :csv do |obj, options|
  filename = options[:filename] || 'data'
  str = obj.respond_to?(:to_csv) ? obj.to_csv : obj.to_s
  send_data str, type: Mime[:csv],
    disposition: "attachment; filename=#{filename}.csv"
endNote that we usedMimefor the csv mime type as it comes withRails. For a custom renderer, youâll need to register a mime type withMime::Type.register.To use the csv renderer in a controller action:def show
  @csvable = Csvable.find(params[:id])
  respond_to do |format|
    format.html
    format.csv { render csv: @csvable, filename: @csvable.name }
  end
endSource:show|on GitHub# File actionpack/lib/action_controller/metal/renderers.rb, line 75defself.add(key,&block)define_method(_render_with_renderer_method_name(key),&block)RENDERERS<<key.to_symendremove(key)LinkThis method is the opposite of add method.To remove a csv renderer:ActionController::Renderers.remove(:csv)Source:show|on GitHub# File actionpack/lib/action_controller/metal/renderers.rb, line 85defself.remove(key)RENDERERS.delete(key.to_sym)method_name=_render_with_renderer_method_name(key)remove_possible_method(method_name)endInstance Public methods_render_to_body_with_renderer(options)LinkSource:show|on GitHub# File actionpack/lib/action_controller/metal/renderers.rb, line 145def_render_to_body_with_renderer(options)_renderers.eachdo|name|ifoptions.key?(name)_process_options(options)method_name=Renderers._render_with_renderer_method_name(name)returnsend(method_name,options.delete(name),options)endendnilendrender_to_body(options)LinkCalled byrenderinAbstractController::Renderingwhich sets the return value as theresponse_body.If no renderer is found,superreturns control toActionView::Rendering.render_to_body, if present.Source:show|on GitHub# File actionpack/lib/action_controller/metal/renderers.rb, line 141defrender_to_body(options)_render_to_body_with_renderer(options)||superend