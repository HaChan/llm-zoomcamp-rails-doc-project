MethodsBbanner,base_nameCcommand_nameDdefault_command_root,descEengine?,executableHhide_command!NnamespacePprinting_commandsUusage_pathIncluded ModulesRails::Command::ActionsClass Public methodsbanner(command = nil, *)LinkSource:show|on GitHub# File railties/lib/rails/command/base.rb, line 86defbanner(command=nil,*)ifcommand# Similar to Thor's banner, but show the namespace (minus the# "rails:" prefix), and show the command's declared bin instead of# the command runner.command.formatted_usage(self).gsub(/^#{namespace}:(\w+)/) {executable($1) }elseexecutableendendbase_name()LinkSets thebase_nametaking into account the current class namespace.Rails::Command::TestCommand.base_name # => 'rails'Source:show|on GitHub# File railties/lib/rails/command/base.rb, line 106defbase_name@base_name||=ifbase=name.to_s.split("::").firstbase.underscoreendendcommand_name()LinkReturn command name without namespaces.Rails::Command::TestCommand.command_name # => 'test'Source:show|on GitHub# File railties/lib/rails/command/base.rb, line 115defcommand_name@command_name||=ifcommand=name.to_s.split("::").lastcommand.chomp!("Command")command.underscoreendenddefault_command_root()LinkDefault file root to place extra files a command might need, placed one folder above the command file.For a Rails::Command::TestCommand placed inrails/command/test_command.rbwould returnrails/test.Source:show|on GitHub# File railties/lib/rails/command/base.rb, line 139defdefault_command_root@default_command_root=resolve_path(".")unlessdefined?(@default_command_root)@default_command_rootenddesc(usage = nil, description = nil, options = {})LinkTries to get the description from a USAGE file one folder above the command root.Source:show|on GitHub# File railties/lib/rails/command/base.rb, line 34defdesc(usage=nil,description=nil,options= {})ifusagesuperelseclass_usageendendengine?()LinkReturns true when the app is a Rails engine.Source:show|on GitHub# File railties/lib/rails/command/base.rb, line 28defengine?defined?(ENGINE_ROOT)endexecutable(command_name = self.command_name)LinkSource:show|on GitHub# File railties/lib/rails/command/base.rb, line 82defexecutable(command_name=self.command_name)"#{bin} #{namespaced_name(command_name)}"endhide_command!()LinkConvenience method to hide this command from the available ones when running rails command.Source:show|on GitHub# File railties/lib/rails/command/base.rb, line 55defhide_command!Rails::Command.hidden_commands<<selfendnamespace(name = nil)LinkConvenience method to get the namespace from the class name. Itâs the same as Thor default except that theCommandat the end of the class is removed.Source:show|on GitHub# File railties/lib/rails/command/base.rb, line 45defnamespace(name=nil)ifnamesuperelse@namespace||=super.chomp("_command").sub(/:command:/,":")endendprinting_commands()LinkSource:show|on GitHub# File railties/lib/rails/command/base.rb, line 76defprinting_commandscommands.filter_mapdo|name,command|[namespaced_name(name),command.description]unlesscommand.hidden?endendusage_path()LinkPath to lookup a USAGE description in a file.Source:show|on GitHub# File railties/lib/rails/command/base.rb, line 129defusage_path@usage_path=resolve_path("USAGE")unlessdefined?(@usage_path)@usage_pathend