Action View Number HelpersProvides methods for converting numbers into formatted strings. Methods are provided for phone numbers, currency, percentage, precision, positional notation, file size, and pretty printing.Most methods expect anumberargument, and will return it unchanged if canât be converted into a valid number.NamespaceCLASSActionView::Helpers::NumberHelper::InvalidNumberErrorMethodsNnumber_to_currency,number_to_human,number_to_human_size,number_to_percentage,number_to_phone,number_with_delimiter,number_with_precisionInstance Public methodsnumber_to_currency(number, options = {})LinkDelegates toActiveSupport::NumberHelper#number_to_currency.Additionally, supports a:raiseoption that will causeInvalidNumberErrorto be raised ifnumberis not a valid number:number_to_currency("12x34")              # => "$12x34"
number_to_currency("12x34", raise: true) # => InvalidNumberErrorSource:show|on GitHub# File actionview/lib/action_view/helpers/number_helper.rb, line 51defnumber_to_currency(number,options= {})delegate_number_helper_method(:number_to_currency,number,options)endnumber_to_human(number, options = {})LinkDelegates toActiveSupport::NumberHelper#number_to_human.Additionally, supports a:raiseoption that will causeInvalidNumberErrorto be raised ifnumberis not a valid number:number_to_human("12x34")              # => "12x34"
number_to_human("12x34", raise: true) # => InvalidNumberErrorSource:show|on GitHub# File actionview/lib/action_view/helpers/number_helper.rb, line 111defnumber_to_human(number,options= {})delegate_number_helper_method(:number_to_human,number,options)endnumber_to_human_size(number, options = {})LinkDelegates toActiveSupport::NumberHelper#number_to_human_size.Additionally, supports a:raiseoption that will causeInvalidNumberErrorto be raised ifnumberis not a valid number:number_to_human_size("12x34")              # => "12x34"
number_to_human_size("12x34", raise: true) # => InvalidNumberErrorSource:show|on GitHub# File actionview/lib/action_view/helpers/number_helper.rb, line 99defnumber_to_human_size(number,options= {})delegate_number_helper_method(:number_to_human_size,number,options)endnumber_to_percentage(number, options = {})LinkDelegates toActiveSupport::NumberHelper#number_to_percentage.Additionally, supports a:raiseoption that will causeInvalidNumberErrorto be raised ifnumberis not a valid number:number_to_percentage("99x")              # => "99x%"
number_to_percentage("99x", raise: true) # => InvalidNumberErrorSource:show|on GitHub# File actionview/lib/action_view/helpers/number_helper.rb, line 63defnumber_to_percentage(number,options= {})delegate_number_helper_method(:number_to_percentage,number,options)endnumber_to_phone(number, options = {})LinkDelegates toActiveSupport::NumberHelper#number_to_phone.Additionally, supports a:raiseoption that will causeInvalidNumberErrorto be raised ifnumberis not a valid number:number_to_phone("12x34")              # => "12x34"
number_to_phone("12x34", raise: true) # => InvalidNumberErrorSource:show|on GitHub# File actionview/lib/action_view/helpers/number_helper.rb, line 35defnumber_to_phone(number,options= {})returnunlessnumberoptions=options.symbolize_keysparse_float(number,true)ifoptions.delete(:raise)ERB::Util.html_escape(ActiveSupport::NumberHelper.number_to_phone(number,options))endnumber_with_delimiter(number, options = {})LinkDelegates toActiveSupport::NumberHelper#number_to_delimited.Additionally, supports a:raiseoption that will causeInvalidNumberErrorto be raised ifnumberis not a valid number:number_with_delimiter("12x34")              # => "12x34"
number_with_delimiter("12x34", raise: true) # => InvalidNumberErrorSource:show|on GitHub# File actionview/lib/action_view/helpers/number_helper.rb, line 75defnumber_with_delimiter(number,options= {})delegate_number_helper_method(:number_to_delimited,number,options)endnumber_with_precision(number, options = {})LinkDelegates toActiveSupport::NumberHelper#number_to_rounded.Additionally, supports a:raiseoption that will causeInvalidNumberErrorto be raised ifnumberis not a valid number:number_with_precision("12x34")              # => "12x34"
number_with_precision("12x34", raise: true) # => InvalidNumberErrorSource:show|on GitHub# File actionview/lib/action_view/helpers/number_helper.rb, line 87defnumber_with_precision(number,options= {})delegate_number_helper_method(:number_to_rounded,number,options)end