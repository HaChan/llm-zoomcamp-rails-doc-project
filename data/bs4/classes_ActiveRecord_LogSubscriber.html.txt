MethodsSsql,strict_loading_violationConstantsIGNORE_PAYLOAD_NAMES=["SCHEMA", "EXPLAIN"]Instance Public methodssql(event)LinkSource:show|on GitHub# File activerecord/lib/active_record/log_subscriber.rb, line 18defsql(event)payload=event.payloadreturnifIGNORE_PAYLOAD_NAMES.include?(payload[:name])name=ifpayload[:async]"ASYNC #{payload[:name]} (#{payload[:lock_wait].round(1)}ms) (db time #{event.duration.round(1)}ms)"else"#{payload[:name]} (#{event.duration.round(1)}ms)"endname="CACHE #{name}"ifpayload[:cached]sql=payload[:sql]binds=nilifpayload[:binds]&.any?casted_params=type_casted_binds(payload[:type_casted_binds])binds= []payload[:binds].each_with_indexdo|attr,i|attribute_name=ifattr.respond_to?(:name)attr.nameelsifattr.respond_to?(:[])&&attr[i].respond_to?(:name)attr[i].nameelsenilendfiltered_params=filter(attribute_name,casted_params[i])binds<<render_bind(attr,filtered_params)endbinds=binds.inspectbinds.prepend("  ")endname=colorize_payload_name(name,payload[:name])sql=color(sql,sql_color(sql),bold:true)ifcolorize_loggingdebug"  #{name}  #{sql}#{binds}"endstrict_loading_violation(event)LinkSource:show|on GitHub# File activerecord/lib/active_record/log_subscriber.rb, line 9defstrict_loading_violation(event)debugdoowner=event.payload[:owner]reflection=event.payload[:reflection]color(reflection.strict_loading_violation_message(owner),RED)endend