MethodsCcomplete!Rregister_hook,run!Tto_complete,to_runWwrapIncluded ModulesActiveSupport::CallbacksClass Public methodsregister_hook(hook, outer: false)LinkRegister an object to be invoked during both therunandcompletesteps.hook.completewill be passed the value returned fromhook.run, and will only be invoked ifrunhas previously been called. (Mostly, this means it wonât be invoked if an exception occurs in a precedingto_runblock; all ordinaryto_completeblocks are invoked in that situation.)Source:show|on GitHub# File activesupport/lib/active_support/execution_wrapper.rb, line 50defself.register_hook(hook,outer:false)ifouterto_runRunHook.new(hook),prepend:trueto_complete:after,CompleteHook.new(hook)elseto_runRunHook.new(hook)to_completeCompleteHook.new(hook)endendrun!(reset: false)LinkRun this execution.Returns an instance, whosecomplete!methodmustbe invoked after the work has been performed.Where possible, preferwrap.Source:show|on GitHub# File activesupport/lib/active_support/execution_wrapper.rb, line 66defself.run!(reset:false)ifresetlost_instance=IsolatedExecutionState.delete(active_key)lost_instance&.complete!elsereturnNullifactive?endnew.tapdo|instance|success=nilbegininstance.run!success=trueensureinstance.complete!unlesssuccessendendendto_complete(*args, &block)LinkSource:show|on GitHub# File activesupport/lib/active_support/execution_wrapper.rb, line 21defself.to_complete(*args,&block)set_callback(:complete,*args,&block)endto_run(*args, &block)LinkSource:show|on GitHub# File activesupport/lib/active_support/execution_wrapper.rb, line 17defself.to_run(*args,&block)set_callback(:run,*args,&block)endwrap(source: "application.active_support")LinkPerform the work in the supplied block as an execution.Source:show|on GitHub# File activesupport/lib/active_support/execution_wrapper.rb, line 86defself.wrap(source:"application.active_support")returnyieldifactive?instance=run!beginyieldrescue=>errorerror_reporter&.report(error,handled:false,source:source)raiseensureinstance.complete!endendInstance Public methodscomplete!()LinkComplete this in-flight execution. This methodmustbe called exactly once on the result of any call torun!.Where possible, preferwrap.Source:show|on GitHub# File activesupport/lib/active_support/execution_wrapper.rb, line 135defcomplete!completeensureIsolatedExecutionState.delete(self.class.active_key)end