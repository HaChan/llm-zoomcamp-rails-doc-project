Active Model Lint TestsYou can test whether an object is compliant with the Active ModelAPIby includingActiveModel::Lint::Testsin your TestCase. It will include tests that tell you whether your object is fully compliant, or if not, which aspects of theAPIare not implemented.Note an object is not required to implement all APIs in order to work with Action Pack. This module only intends to provide guidance in case you want all features out of the box.These tests do not attempt to determine the semantic correctness of the returned values. For instance, you could implementvalid?to always returntrue, and the tests would pass. It is up to you to ensure that the values are semantically meaningful.Objects you pass in are expected to return a compliant object from a call toto_model. It is perfectly fine forto_modelto returnself.MethodsTtest_errors_aref,test_model_naming,test_persisted?,test_to_key,test_to_param,test_to_partial_pathInstance Public methodstest_errors_aref()LinkPasses if the objectâs model responds toerrorsand if calling[](attribute)on the result of this method returns an array. Fails otherwise.errors[attribute]is used to retrieve the errors of a model for a given attribute. If errors are present, the method should return an array of strings that are the errors for the attribute in question. If localization is used, the strings should be localized for the current locale. If no error is present, the method should return an empty array.Source:show|on GitHub# File activemodel/lib/active_model/lint.rb, line 102deftest_errors_arefassert_respond_tomodel,:errorsassert_equal[],model.errors[:hello],"errors#[] should return an empty Array"endtest_model_naming()LinkPasses if the objectâs model responds tomodel_nameboth as an instance method and as a class method, and if calling this method returns a string with some convenience methods::human,:singularand:plural.CheckActiveModel::Namingfor more information.Source:show|on GitHub# File activemodel/lib/active_model/lint.rb, line 81deftest_model_namingassert_respond_tomodel.class,:model_namemodel_name=model.class.model_nameassert_respond_tomodel_name,:to_strassert_respond_tomodel_name.human,:to_strassert_respond_tomodel_name.singular,:to_strassert_respond_tomodel_name.plural,:to_strassert_respond_tomodel,:model_nameassert_equalmodel.model_name,model.class.model_nameendtest_persisted?()LinkPasses if the objectâs model responds topersisted?and if calling this method returns eithertrueorfalse. Fails otherwise.persisted?is used when calculating the URL for an object. If the object is not persisted, a form for that object, for instance, will route to the create action. If it is persisted, a form for the object will route to the update action.Source:show|on GitHub# File activemodel/lib/active_model/lint.rb, line 70deftest_persisted?assert_respond_tomodel,:persisted?assert_booleanmodel.persisted?,"persisted?"endtest_to_key()LinkPasses if the objectâs model responds toto_keyand if calling this method returnsnilwhen the object is not persisted. Fails otherwise.to_keyreturns anEnumerableof all (primary) key attributes of the model, and is used to a generate unique DOM id for the object.Source:show|on GitHub# File activemodel/lib/active_model/lint.rb, line 31deftest_to_keyassert_respond_tomodel,:to_keydefmodel.persisted?()falseendassertmodel.to_key.nil?,"to_key should return nil when `persisted?` returns false"endtest_to_param()LinkPasses if the objectâs model responds toto_paramand if calling this method returnsnilwhen the object is not persisted. Fails otherwise.to_paramis used to represent the objectâs key in URLs. Implementers can decide to either raise an exception or provide a default in case the record uses a composite primary key. There are no tests for this behavior in lint because it doesnât make sense to force any of the possible implementation strategies on the implementer.Source:show|on GitHub# File activemodel/lib/active_model/lint.rb, line 46deftest_to_paramassert_respond_tomodel,:to_paramdefmodel.to_key() [1]enddefmodel.persisted?()falseendassertmodel.to_param.nil?,"to_param should return nil when `persisted?` returns false"endtest_to_partial_path()LinkPasses if the objectâs model responds toto_partial_pathand if calling this method returns a string. Fails otherwise.to_partial_pathis used for looking up partials. For example, a BlogPost model might return âblog_posts/blog_postâ.Source:show|on GitHub# File activemodel/lib/active_model/lint.rb, line 58deftest_to_partial_pathassert_respond_tomodel,:to_partial_pathassert_kind_ofString,model.to_partial_pathend