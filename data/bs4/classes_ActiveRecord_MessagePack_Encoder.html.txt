MethodsAadd_cached_associationsBbuild_entryEencode,encode_recordNnewAttributes[R]entriesClass Public methodsnew()LinkSource:show|on GitHub# File activerecord/lib/active_record/message_pack.rb, line 48definitialize@entries= []@refs= {}.compare_by_identityendInstance Public methodsadd_cached_associations(record, entry)LinkSource:show|on GitHub# File activerecord/lib/active_record/message_pack.rb, line 81defadd_cached_associations(record,entry)record.class.normalized_reflections.each_valuedo|reflection|ifrecord.association_cached?(reflection.name)&&record.association(reflection.name).loaded?entry<<reflection.name<<encode(record.association(reflection.name).target)endendendbuild_entry(record)LinkSource:show|on GitHub# File activerecord/lib/active_record/message_pack.rb, line 73defbuild_entry(record)
  [ActiveSupport::MessagePack::Extensions.dump_class(record.class),record.attributes_for_database,record.new_record?]endencode(input)LinkSource:show|on GitHub# File activerecord/lib/active_record/message_pack.rb, line 53defencode(input)ifinput.is_a?(Array)input.map{|record|encode_record(record) }elsifinputencode_record(input)endendencode_record(record)LinkSource:show|on GitHub# File activerecord/lib/active_record/message_pack.rb, line 61defencode_record(record)ref=@refs[record]if!refref=@refs[record] =@entries.size@entries<<build_entry(record)add_cached_associations(record,@entries.last)endrefend