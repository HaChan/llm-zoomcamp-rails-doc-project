File Cache StoreA cache store implementation which stores everything on the filesystem.MethodsCcleanup,clearDdecrement,delete_matchedIincrementNnewSsupports_cache_versioning?ConstantsDIR_FORMATTER="%03X"FILENAME_MAX_SIZE=226FILEPATH_MAX_SIZE=900GITKEEP_FILES=[".gitkeep", ".keep"].freezeAttributes[R]cache_pathClass Public methodsnew(cache_path, **options)LinkSource:show|on GitHub# File activesupport/lib/active_support/cache/file_store.rb, line 20definitialize(cache_path,**options)super(options)@cache_path=cache_path.to_sendsupports_cache_versioning?()LinkAdvertise cache versioning support.Source:show|on GitHub# File activesupport/lib/active_support/cache/file_store.rb, line 26defself.supports_cache_versioning?trueendInstance Public methodscleanup(options = nil)LinkPreemptively iterates through all stored keys and removes the ones which have expired.Source:show|on GitHub# File activesupport/lib/active_support/cache/file_store.rb, line 40defcleanup(options=nil)options=merged_options(options)search_dir(cache_path)do|fname|entry=read_entry(fname,**options)delete_entry(fname,**options)ifentry&&entry.expired?endendclear(options = nil)LinkDeletes all items from the cache. In this case it deletes all the entries in the specified file store directory except for .keep or .gitkeep. Be careful which directory is specified in your config file when usingFileStorebecause everything in that directory will be deleted.Source:show|on GitHub# File activesupport/lib/active_support/cache/file_store.rb, line 33defclear(options=nil)root_dirs= (Dir.children(cache_path)-GITKEEP_FILES)FileUtils.rm_r(root_dirs.collect{|f|File.join(cache_path,f) })rescueErrno::ENOENT,Errno::ENOTEMPTYenddecrement(name, amount = 1, options = nil)LinkDecrement a cached integer value. Returns the updated value.If the key is unset, it will be set to-amount.cache.decrement("foo") # => -1To set a specific value, callwrite:cache.write("baz", 5)
cache.decrement("baz") # => 4Source:show|on GitHub# File activesupport/lib/active_support/cache/file_store.rb, line 75defdecrement(name,amount=1,options=nil)modify_value(name,-amount,options)enddelete_matched(matcher, options = nil)LinkSource:show|on GitHub# File activesupport/lib/active_support/cache/file_store.rb, line 79defdelete_matched(matcher,options=nil)options=merged_options(options)matcher=key_matcher(matcher,options)instrument(:delete_matched,matcher.inspect)dosearch_dir(cache_path)do|path|key=file_path_key(path)delete_entry(path,**options)ifkey.match(matcher)endendendincrement(name, amount = 1, options = nil)LinkIncrement a cached integer value. Returns the updated value.If the key is unset, it starts from0:cache.increment("foo") # => 1
cache.increment("bar", 100) # => 100To set a specific value, callwrite:cache.write("baz", 5)
cache.increment("baz") # => 6Source:show|on GitHub# File activesupport/lib/active_support/cache/file_store.rb, line 60defincrement(name,amount=1,options=nil)modify_value(name,amount,options)end