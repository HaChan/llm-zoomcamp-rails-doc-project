Active Storage Attached ManyDecorated proxy object representing of multiple attachments to a model.MethodsAattach,attached?,attachmentsBblobsDdetachPpurge,purge_laterInstance Public methodsattach(*attachables)LinkAttaches one or moreattachablesto the record.If the record is persisted and unchanged, the attachments are saved to the database immediately. Otherwise, theyâll be saved to the DB when the record is next saved.document.images.attach(params[:images]) # Array of ActionDispatch::Http::UploadedFile objects
document.images.attach(params[:signed_blob_id]) # Signed reference to blob from direct upload
document.images.attach(io: File.open("/path/to/racecar.jpg"), filename: "racecar.jpg", content_type: "image/jpeg")
document.images.attach([ first_blob, second_blob ])Source:show|on GitHub# File activestorage/lib/active_storage/attached/many.rb, line 51defattach(*attachables)record.public_send("#{name}=",blobs+attachables.flatten)ifrecord.persisted?&&!record.changed?returnif!record.saveendrecord.public_send("#{name}")endattached?()LinkReturns true if any attachments have been made.class Gallery < ApplicationRecord
  has_many_attached :photos
end

Gallery.new.photos.attached? # => falseSource:show|on GitHub# File activestorage/lib/active_storage/attached/many.rb, line 66defattached?attachments.any?endattachments()LinkReturns all the associated attachment records.All methods called on this proxy object that arenât listed here will automatically be delegated toattachments.Source:show|on GitHub# File activestorage/lib/active_storage/attached/many.rb, line 32defattachmentschange.present??change.attachments:record.public_send("#{name}_attachments")endblobs()LinkReturns all attached blobs.Source:show|on GitHub# File activestorage/lib/active_storage/attached/many.rb, line 37defblobschange.present??change.blobs:record.public_send("#{name}_blobs")enddetachLinkDeletes associated attachments without purging them, leaving their respective blobs in place.Source:show|on GitHub# File activestorage/lib/active_storage/attached/many.rb, line 25delegate:detach,to::detach_manypurgeLinkDirectly purges each associated attachment (i.e. destroys the blobs and attachments and deletes the files on the service).Source:show|on GitHub# File activestorage/lib/active_storage/attached/many.rb, line 13delegate:purge,to::purge_manypurge_laterLinkPurges each associated attachment through the queuing system.Source:show|on GitHub# File activestorage/lib/active_storage/attached/many.rb, line 19delegate:purge_later,to::purge_many