ActiveRecord::Encryptionuses encryption contexts to configure the different entities used to encrypt/decrypt at a given moment in time.By default, the library uses a default encryption context. This is theContextthat gets configured initially viaconfig.active_record.encryptionoptions. Library users can define nested encryption contexts when running blocks of code.SeeContext.MethodsCcontext,current_custom_contextPprotecting_encrypted_dataRreset_default_contextWwith_encryption_context,without_encryptionInstance Public methodscontext()LinkReturns the current context. By default it will return the current context.Source:show|on GitHub# File activerecord/lib/active_record/encryption/contexts.rb, line 62defcontextself.current_custom_context||self.default_contextendcurrent_custom_context()LinkSource:show|on GitHub# File activerecord/lib/active_record/encryption/contexts.rb, line 66defcurrent_custom_contextself.custom_contexts&.lastendprotecting_encrypted_data(&block)LinkRuns the provided block in an encryption context where:Reading encrypted content will return its ciphertext.Writing encrypted content will fail.Source:show|on GitHub# File activerecord/lib/active_record/encryption/contexts.rb, line 57defprotecting_encrypted_data(&block)with_encryption_contextencryptor:ActiveRecord::Encryption::EncryptingOnlyEncryptor.new,frozen_encryption:true,&blockendreset_default_context()LinkSource:show|on GitHub# File activerecord/lib/active_record/encryption/contexts.rb, line 70defreset_default_contextself.default_context=Context.newendwith_encryption_context(properties)LinkConfigures a custom encryption context to use when running the provided block of code.It supports overriding all the properties defined inContext.Example:ActiveRecord::Encryption.with_encryption_context(encryptor: ActiveRecord::Encryption::NullEncryptor.new) do
  ...
endEncryptioncontexts can be nested.Source:show|on GitHub# File activerecord/lib/active_record/encryption/contexts.rb, line 33defwith_encryption_context(properties)self.custom_contexts||=[]self.custom_contexts<<default_context.dupproperties.eachdo|key,value|self.current_custom_context.send("#{key}=",value)endyieldensureself.custom_contexts.popendwithout_encryption(&block)LinkRuns the provided block in an encryption context where encryption is disabled:Reading encrypted content will return its ciphertexts.Writing encrypted content will write its clear text.Source:show|on GitHub# File activerecord/lib/active_record/encryption/contexts.rb, line 49defwithout_encryption(&block)with_encryption_contextencryptor:ActiveRecord::Encryption::NullEncryptor.new,&blockend