MethodsAassert_deprecated,assert_not_deprecatedCcollect_deprecationsInstance Public methodsassert_deprecated(deprecator, █)assert_deprecated(match, deprecator, █)LinkAsserts that a matching deprecation warning was emitted by the given deprecator during the execution of the yielded block.assert_deprecated(/foo/, CustomDeprecator) do
  CustomDeprecator.warn "foo should no longer be used"
endThematchobject may be aRegexp, orStringappearing in the message.assert_deprecated('foo', CustomDeprecator) do
  CustomDeprecator.warn "foo should no longer be used"
endIf thematchis omitted (or explicitlynil), any deprecation warning will match.assert_deprecated(CustomDeprecator) do
  CustomDeprecator.warn "foo should no longer be used"
endSource:show|on GitHub# File activesupport/lib/active_support/testing/deprecation.rb, line 30defassert_deprecated(match=nil,deprecator=nil,&block)match,deprecator=nil,matchifmatch.is_a?(ActiveSupport::Deprecation)unlessdeprecatorraiseArgumentError,"No deprecator given"endresult,warnings=collect_deprecations(deprecator,&block)assert!warnings.empty?,"Expected a deprecation warning within the block but received none"ifmatchmatch=Regexp.new(Regexp.escape(match))unlessmatch.is_a?(Regexp)assertwarnings.any?{|w|match.match?(w) },"No deprecation warning matched #{match}: #{warnings.join(', ')}"endresultendassert_not_deprecated(deprecator, &block)LinkAsserts that no deprecation warnings are emitted by the given deprecator during the execution of the yielded block.assert_not_deprecated(CustomDeprecator) do
  CustomDeprecator.warn "message" # fails assertion
end

assert_not_deprecated(ActiveSupport::Deprecation.new) do
  CustomDeprecator.warn "message" # passes assertion, different deprecator
endSource:show|on GitHub# File activesupport/lib/active_support/testing/deprecation.rb, line 55defassert_not_deprecated(deprecator,&block)result,deprecations=collect_deprecations(deprecator,&block)assertdeprecations.empty?,"Expected no deprecation warning within the block but received #{deprecations.size}: \n  #{deprecations * "\n  "}"resultendcollect_deprecations(deprecator)LinkReturns the return value of the block and an array of all the deprecation warnings emitted by the givendeprecatorduring the execution of the yielded block.collect_deprecations(CustomDeprecator) do
  CustomDeprecator.warn "message"
  ActiveSupport::Deprecation.new.warn "other message"
  :result
end # => [:result, ["message"]]Source:show|on GitHub# File activesupport/lib/active_support/testing/deprecation.rb, line 69defcollect_deprecations(deprecator)old_behavior=deprecator.behaviordeprecations= []deprecator.behavior=Proc.newdo|message,callstack|deprecations<<messageendresult=yield[result,deprecations]ensuredeprecator.behavior=old_behaviorend