Action CableServerBaseA singletonActionCable::Serverinstance is available viaActionCable.server. Itâs used by the Rack process that starts the Action Cable server, but is also used by the user to reach theRemoteConnectionsobject, which is used for finding and disconnecting connections across all servers.Also, this is the server instance used for broadcasting. SeeBroadcastingfor more information.MethodsCcall,connection_identifiersDdisconnectEevent_loopLloggerNnewPpubsubRremote_connections,restartWworker_poolIncluded ModulesActionCable::Server::BroadcastingAttributes[R]config[R]mutexClass Public methodslogger()LinkSource:show|on GitHub# File actioncable/lib/action_cable/server/base.rb, line 26defself.logger;config.logger;endnew(config: self.class.config)LinkSource:show|on GitHub# File actioncable/lib/action_cable/server/base.rb, line 31definitialize(config:self.class.config)@config=config@mutex=Monitor.new@remote_connections=@event_loop=@worker_pool=@pubsub=nilendInstance Public methodscall(env)LinkCalled by Rack to set up the server.Source:show|on GitHub# File actioncable/lib/action_cable/server/base.rb, line 38defcall(env)returnconfig.health_check_application.call(env)ifenv["PATH_INFO"]==config.health_check_pathsetup_heartbeat_timerconfig.connection_class.call.new(self,env).processendconnection_identifiers()LinkAll of the identifiers applied to the connection class associated with this server.Source:show|on GitHub# File actioncable/lib/action_cable/server/base.rb, line 102defconnection_identifiersconfig.connection_class.call.identifiersenddisconnect(identifiers)LinkDisconnect all the connections identified byidentifierson this server or any others viaRemoteConnections.Source:show|on GitHub# File actioncable/lib/action_cable/server/base.rb, line 46defdisconnect(identifiers)remote_connections.where(identifiers).disconnectendevent_loop()LinkSource:show|on GitHub# File actioncable/lib/action_cable/server/base.rb, line 71defevent_loop@event_loop||@mutex.synchronize{@event_loop||=ActionCable::Connection::StreamEventLoop.new}endpubsub()LinkAdapter used for all streams/broadcasting.Source:show|on GitHub# File actioncable/lib/action_cable/server/base.rb, line 96defpubsub@pubsub||@mutex.synchronize{@pubsub||=config.pubsub_adapter.new(self) }endremote_connections()LinkGateway toRemoteConnections. See that class for details.Source:show|on GitHub# File actioncable/lib/action_cable/server/base.rb, line 67defremote_connections@remote_connections||@mutex.synchronize{@remote_connections||=RemoteConnections.new(self) }endrestart()LinkSource:show|on GitHub# File actioncable/lib/action_cable/server/base.rb, line 50defrestartconnections.eachdo|connection|connection.close(reason:ActionCable::INTERNAL[:disconnect_reasons][:server_restart])end@mutex.synchronizedo# Shutdown the worker pool@worker_pool.haltif@worker_pool@worker_pool=nil# Shutdown the pub/sub adapter@pubsub.shutdownif@pubsub@pubsub=nilendendworker_pool()LinkThe worker pool is where we run connection callbacks and channel actions. We do as little as possible on the serverâs main thread. The worker pool is an executor service thatâs backed by a pool of threads working from a task queue. The thread pool size maxes out at 4 worker threads by default. Tune the size yourself withconfig.action_cable.worker_pool_size.Using Active Record, Redis, etc within your channel actions means youâll get a separate connection from each thread in the worker pool. Plan your deployment accordingly: 5 servers each running 5 Puma workers each running an 8-thread worker pool means at least 200 database connections.Also, ensure that your database connection pool size is as least as large as your worker pool size. Otherwise, workers may oversubscribe the database connection pool and block while they wait for other workers to release their connections. Use a smaller worker pool or a larger database connection pool instead.Source:show|on GitHub# File actioncable/lib/action_cable/server/base.rb, line 91defworker_pool@worker_pool||@mutex.synchronize{@worker_pool||=ActionCable::Server::Worker.new(max_size:config.worker_pool_size) }end