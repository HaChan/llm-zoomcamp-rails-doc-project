Active Job Async adapterThe Async adapter runs jobs with an in-process thread pool.This is the default queue adapter. Itâs well-suited for dev/test since it doesnât need an external infrastructure, but itâs a poor fit for production since it drops pending jobs on restart.To use this adapter, set queue adapter to:async:config.active_job.queue_adapter = :asyncTo configure the adapterâs thread pool, instantiate the adapter and pass your own config:config.active_job.queue_adapter = ActiveJob::QueueAdapters::AsyncAdapter.new \
  min_threads: 1,
  max_threads: 2 * Concurrent.processor_count,
  idletime: 600.secondsThe adapter uses aConcurrent Rubythread pool to schedule and execute jobs. Since jobs share a single thread pool, long-running jobs will block short-lived jobs. Fine for dev/test; bad for production.MethodsNnewClass Public methodsnew(**executor_options)LinkSeeConcurrent::ThreadPoolExecutorfor executor options.Source:show|on GitHub# File activejob/lib/active_job/queue_adapters/async_adapter.rb, line 35definitialize(**executor_options)@scheduler=Scheduler.new(**executor_options)end