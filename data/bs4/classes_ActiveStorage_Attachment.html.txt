Active Storage AttachmentAttachments associate records with blobs. Usually thatâs a one record-many blobs relationship, but it is possible to associate many different records with the same blob. A foreign-key constraint on the attachments table prevents blobs from being purged if theyâre still attached to any records.Attachments also have access to all methods fromActiveStorage::Blob.If you wish to preload attachments or blobs, you can use these scopes:# preloads attachments, their corresponding blobs, and variant records (if using `ActiveStorage.track_variants`)
User.all.with_attached_avatars

# preloads blobs and variant records (if using `ActiveStorage.track_variants`)
User.first.avatars.with_all_variant_recordsMethodsBblobPpreview,purge,purge_laterRrecord,representationVvariantWwith_all_variant_recordsClass Public methodswith_all_variant_recordsLinkEager load all variant records on an attachment at once.User.first.avatars.with_all_variant_recordsSource:show|on GitHub# File activestorage/app/models/active_storage/attachment.rb, line 45scope:with_all_variant_records,->{includes(blob:{variant_records:{image_attachment::blob},preview_image_attachment:{blob:{variant_records:{image_attachment::blob} } }Instance Public methodsblobLinkReturns the associatedActiveStorage::Blob.Source:show|on GitHub# File activestorage/app/models/active_storage/attachment.rb, line 31belongs_to:blob,class_name:"ActiveStorage::Blob",autosave:true,inverse_of::attachmentspreview(transformations)LinkReturns anActiveStorage::Previewinstance for the attachment with the set oftransformationsprovided. Example:video.preview(resize_to_limit: [100, 100]).processed.urlor if you are using pre-defined variants:video.preview(:thumb).processed.urlSeeActiveStorage::Blob::Representable#previewfor more information.Raises anArgumentErroriftransformationsis aSymbolwhich is an unknown pre-defined variant of the attachment.Source:show|on GitHub# File activestorage/app/models/active_storage/attachment.rb, line 101defpreview(transformations)transformations=transformations_by_name(transformations)blob.preview(transformations)endpurge()LinkSynchronously deletes the attachment andpurges the blob.Source:show|on GitHub# File activestorage/app/models/active_storage/attachment.rb, line 51defpurgetransactiondodeleterecord.touchifrecord&.persisted?endblob&.purgeendpurge_later()LinkDeletes the attachment andenqueues a background jobto purge the blob.Source:show|on GitHub# File activestorage/app/models/active_storage/attachment.rb, line 60defpurge_latertransactiondodeleterecord.touchifrecord&.persisted?endblob&.purge_laterendrecordLinkReturns the associated record.Source:show|on GitHub# File activestorage/app/models/active_storage/attachment.rb, line 25belongs_to:record,polymorphic:true,touch:ActiveStorage.touch_attachment_recordsrepresentation(transformations)LinkReturns anActiveStorage::Previewor anActiveStorage::Variantfor the attachment with set oftransformationsprovided. Example:avatar.representation(resize_to_limit: [100, 100]).processed.urlor if you are using pre-defined variants:avatar.representation(:thumb).processed.urlSeeActiveStorage::Blob::Representable#representationfor more information.Raises anArgumentErroriftransformationsis aSymbolwhich is an unknown pre-defined variant of the attachment.Source:show|on GitHub# File activestorage/app/models/active_storage/attachment.rb, line 120defrepresentation(transformations)transformations=transformations_by_name(transformations)blob.representation(transformations)endvariant(transformations)LinkReturns anActiveStorage::VariantorActiveStorage::VariantWithRecordinstance for the attachment with the set oftransformationsprovided. Example:avatar.variant(resize_to_limit: [100, 100]).processed.urlor if you are using pre-defined variants:avatar.variant(:thumb).processed.urlSeeActiveStorage::Blob::Representable#variantfor more information.Raises anArgumentErroriftransformationsis aSymbolwhich is an unknown pre-defined variant of the attachment.Source:show|on GitHub# File activestorage/app/models/active_storage/attachment.rb, line 82defvariant(transformations)transformations=transformations_by_name(transformations)blob.variant(transformations)end